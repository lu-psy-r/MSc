[
  {
    "objectID": "PSYC411/part1/Week5.html",
    "href": "PSYC411/part1/Week5.html",
    "title": "5. Testing differences between groups",
    "section": "",
    "text": "Watch Lecture week5 part 1, slides here\nPart 2, slides here. Please note I say week 6 in the lectures, but I mean week 5. Sorry about that! It is week 5, be assured.\nTake the quiz (not assessed) on the lecture materials.\nWork through the materials below.\nAttend the practical.\nPop into the drop in (optional). Please note this is in Levy Lab - do come along with any questions at all on the workbooks so far.\nOptionally, if you can give us your (anonymised) feedback on how the course is going from your perspective, that would be very welcome.\nAlso optionally, read the articles on the importance of statistical understanding and insights from good data visualisation.\n\nHow scientists can be better at statistics\nFlorence Nightingale and data visualisation",
    "crumbs": [
      "Home",
      "PSYC411",
      "5. Testing differences between groups"
    ]
  },
  {
    "objectID": "PSYC411/part1/Week5.html#task-1-checklist-what-i-can-now-do",
    "href": "PSYC411/part1/Week5.html#task-1-checklist-what-i-can-now-do",
    "title": "5. Testing differences between groups",
    "section": "Task 1: Checklist: What I can now do",
    "text": "Task 1: Checklist: What I can now do\nYou should be able to answer yes to all the following. If you can’t yet, go back to the previous workbooks and repeat your working until you can answer yes, being able to type in and run the commands without referring to your notes.\n\nI can open R-studio\nI can open new libraries using library()\nI can make an R script file\nI can input a file into an object in R-studio using read_csv()\nI can join two files together using inner_join()\nI can select certain variables from an object using select()\nI can select subsets of data using filter() (e.g., I can select participants in two conditions from a data set containing participants in four conditions)\nI can make new variables using mutate()\nI can arrange data according to subsets using group_by()\nI can change format of data from wide to long format using pivot_longer\nI can change format of data from long to wide format using pivot_wider\nI can produce summaries of means and standard deviations for subsets of data after applying group_by() using summarise()\nI can draw histograms of single variables, point plots of two ratio/interval/ordinal variables, bar plots of counts, and box plots of one categorical and one ratio/interval/ordinal variable using ggplot()\nI can run a Chi-squared test and Cramer’s V test using chisq.test() and cramersV()\nI can interpret the results of a Chi-squared test and Cramer’s V test and write up a simple report of the results.\nI can save an R script file.",
    "crumbs": [
      "Home",
      "PSYC411",
      "5. Testing differences between groups"
    ]
  },
  {
    "objectID": "PSYC411/part1/Week5.html#task-2-load-prepare-and-explore-the-data",
    "href": "PSYC411/part1/Week5.html#task-2-load-prepare-and-explore-the-data",
    "title": "5. Testing differences between groups",
    "section": "Task 2: Load, prepare, and explore the data",
    "text": "Task 2: Load, prepare, and explore the data\n\nClear out R using rm(list=ls())\nLoad again the data set on the Shipley and Gent vocabulary scores.\nSet the research question: do people who self-identify as male or female have different scores on the Gent vocabulary test? The research hypothesis is: “People who identify as male or female have different vocabulary scores”. What is the null hypothesis?\nTo test the research hypothesis, we will filter people who self-identify as male or female from the data set. To be inclusive, additional research questions would be part of your research project to analyse also people who self-identify as other gender. Run this command to extract a subset of the data (note that the | stands for “or”, and means Gender matches male or gender matches female:\n\n\ndat2 &lt;- filter(.data = dat, Gender == 'Male' | Gender == 'Female')\n\n\nDraw a box plot of Gent vocabulary test 1 scores by gender. For a box plot, note that we need data in “long format”, where each observation is on one line, and we have a column that indicates which condition (in this case Gender) the participant is in. Does it look like there might be a gender effect? What is the direction of the effect?\nNote that unless we had filtered the data, the box plot would contain ‘NA’ as well, which stands for missing data. In a data set it’s always a good idea to call missing data ‘NA’ rather than just leaving them blank because this could be interpreted as a zero or as an error of filling in data. Missing values make things untidy, so it’s good practice to focus only on the variables we need for the t-test and remove all other missing values. Use select() to get just the Gender and Gent_1_score variables, and put this in a new object called ‘dat3’.\nNext, in order to run a t-test we have to remove any rows of data which contain a ‘NA’ - either in the Gender or the Gent_1_score variables. We do this using drop_na(dat3), put the result in a new object called ‘dat4’. Run this command:\n\n\ndat4 &lt;- drop_na(dat3)\n\n\nNow, redraw the box plot from Step 21. Check there are just two groups.\nCompute mean and SDs for people who self-identify as male or female on Gent vocabulary test 1 scores.\n\n\n\n\n\n\n\nHint\n\n\n\n\n\nUse group_by() and summarise().",
    "crumbs": [
      "Home",
      "PSYC411",
      "5. Testing differences between groups"
    ]
  },
  {
    "objectID": "PSYC411/part1/Week5.html#task-3-run-the-independent-t-test-and-measure-effect-size",
    "href": "PSYC411/part1/Week5.html#task-3-run-the-independent-t-test-and-measure-effect-size",
    "title": "5. Testing differences between groups",
    "section": "Task 3: Run the independent t-test and measure effect size",
    "text": "Task 3: Run the independent t-test and measure effect size\n\nConduct an independent t-test using this command:\n\n\nt.test(Gent_1_score ~ Gender, paired = FALSE, data = dat5 )\n\n\n‘Gent_1_score ~ Gender’ : the ~ can be interpreted as ‘by’, i.e., compute Gent_1_score by Gender\n‘paired = FALSE’ : this means we are doing an independent t-test (a paired t-test would have paired = TRUE)\n\n\nThe results should look like this, do yours?\n\nWelch Two Sample t-test\n\ndata:  Gent_1_score by Gender\nt = -1.7356, df = 62.409, p-value = 0.08756\nalternative hypothesis: true difference in means is not equal to 0\n95 percent confidence interval:\n  -10.0862020   0.7105407\nsample estimates:\n  mean in group Female   mean in group Male \n57.57407             62.26190 \n\nThe key part of the results to look at is the one that has t = -1.7356, df = 62.409, p-value = 0.08756. This is the result that you report: t(62.41) = -1.74, p = .088.\n\nThe value is negative because the function includes Female before Male - and Female score is lower than Male score. What matters is how far away from zero the t-test is (either positively or negatively). The df value is slightly odd because the t.test() function figures out degrees of freedom in a technical way which takes into account differences in variance in the data between the two groups. We can just use the value that the t.test() function gives us.\n\nIs this a significant difference?\nNow we need to compute the effect size, using Cohen’s d. You need to load the library lsr then use this command:\n\n```{r}\n\ncohensD(Gent_1_score ~ Gender, method = \"unequal\", data = dat4)\n\n```\n\nIt’s pretty much the same as the t-test() command except that we use ‘method = ’unequal’ instead of ‘paired = FALSE’. For a paired t-test you would use ‘method = ’paired’\n\n\nWhat is the effect size? Make a brief report of the results - reporting means and SDs, the t-test, p-value, and Cohen’s d. Discuss your brief report in your group.\nMake sure all commands are in the source window, save them as a new R script file.",
    "crumbs": [
      "Home",
      "PSYC411",
      "5. Testing differences between groups"
    ]
  },
  {
    "objectID": "PSYC411/part1/Week5.html#task-4-practise-running-another-independent-t-test",
    "href": "PSYC411/part1/Week5.html#task-4-practise-running-another-independent-t-test",
    "title": "5. Testing differences between groups",
    "section": "Task 4: Practise running another independent t-test",
    "text": "Task 4: Practise running another independent t-test\n\nNext research question: do people who are native English speakers have different vocabulary scores than those who learned English as a second language? What is the research hypothesis and the null hypothesis?\nRepeat the Steps 22-30 in Tasks 2 and 3 except using english_status in place of Gender throughout.\nWrite a brief report of the results, including means and SDs for native speakers and ESL speakers, t-test, p-value, and Cohen’s d. Discuss your report in your group.\nSave your R script file.\n\nPart 3: Conducting a paired t-test\nTask 5: Conducting a paired t-test\n\nClear out R-studio before we get started again using rm(list=ls())\nWe are going to investigate again the data from this paper: Woodworth, R.J., O’Brien-Malone, A., Diamond, M.R. and Schuez, B., 2018. Data from, “Web-based Positive Psychology Interventions: A Reexamination of Effectiveness”. Journal of Open Psychology Data, 6(1).\n\nOur research question is whether happiness scores are affected by the interventions. We will look at the pre-test (occasion 0) and the first test after the intervention (occasion 1).\n\nWhat is the research hypothesis and what is the null hypothesis?\nFor a paired t-test we can only include data from people who have produced scores at both occasions of testing. So, we need a slightly different version of the data. Download the files here. Remind yourself what these data mean.\nOnce again, join the ahicesd.csv and participantinfo2.csv data in R-studio by aligning the names for the participant bumbers in these two data sets (see week 2 workbook for reminders about this).\nLet’s select only the relevant variables. Use select() to select only id, ahiTotal, and occasion variables, and save this as a new object called ‘summarydata’\nUse filter to pull out only occasion == 0 or occasion == 1 scores\n\n\n\n\n\n\n\nHint\n\n\n\n\n\nuse occasion == 0 | occasion == 1'), save this as a new object called summarydata2\n\n\n\n\nHere is where we would usually remove all the NA values, but there aren’t any in this file (so we don’t need drop_na()).\nNow, we need to make sure occasion is treated as a categorical variable, rather than a continuous variable, so we need to convert it to a factor:\n\n```{r}\n\nsummarydata2$occasion &lt;-as.factor(summarydata2$occasion)\n\n```\n\nNow, draw a box plot of ahiTotal scores by occasion (why do we use a box plot?)\nCompute mean and SD for each occasion\nRun the paired t-test: it’s the same as for the independent t-test except that we use paired = TRUE in place of paired = FALSE:\n\n```{r}\n\nt.test(ahiTotal ~ occasion, paired = TRUE, data = summarydata2)\n\n```\nIs the result significant?\n\nBefore we run the Cohen’s d command for these data, we have to make sure we have a list of the participants in one condition, followed by the list of participants in the other condition. We can do this using the command arrange():\n\n```{r}\n\nsummarydata3 &lt;- arrange(.data = summarydata2, occasion)\n\n```\n\nNow run Cohen’s d: it’s the same as for the independent t-test except that we use ‘method = ’paired’:\n\n```{r}\n\ncohensD(ahiTotal ~ occasion, method = \"paired\", data = summarydata3)\n\n```\nWhat is the value for Cohen’s d?\n\nWrite up a brief report of the result and discuss in your group.\nSave your R script file.",
    "crumbs": [
      "Home",
      "PSYC411",
      "5. Testing differences between groups"
    ]
  },
  {
    "objectID": "PSYC411/part1/Week3.html",
    "href": "PSYC411/part1/Week3.html",
    "title": "3. Drawing graphs from data",
    "section": "",
    "text": "Watch Lecture week3 part1, slides here\nHave a go at the Gent Vocabulary test, and record your score.\nHave another go at the Gent Vocabulary test, and record your score again.\nHave a go at the Shipley Vocabulary test, and record your score. Scoring sheet here\nFill in your vocabulary scores into our course database: What is your vocabulary?\nWatch Lecture week3 part2, slides here.\nWatch Lecture week3 part3, slides here.\nDo the quick quiz.\nGo through the Practical week3 workbook below.\nAttend the practical.\nPop into the drop in (optional).\n\nAnd hey presto, that’s all done!",
    "crumbs": [
      "Home",
      "PSYC411",
      "3. Drawing graphs from data"
    ]
  },
  {
    "objectID": "PSYC411/part1/Week3.html#task-1-describe-and-load-the-data-set-you-found-for-your-take-home-task",
    "href": "PSYC411/part1/Week3.html#task-1-describe-and-load-the-data-set-you-found-for-your-take-home-task",
    "title": "3. Drawing graphs from data",
    "section": "Task 1: Describe and load the data set you found for your take-home task",
    "text": "Task 1: Describe and load the data set you found for your take-home task\n\nYour take-home task was to download a data set that accompanied a paper published in Psychological Science. Describe this data set to the rest of your group.\nLoad your data set into Rstudio.\n\n\n\n\n\n\n\nHint\n\n\n\n\n\nuse read_csv(), or one of the other read functions from the last part of the Practical week2 workbook. You may need to load library(tidyverse).\n\n\n\n\nView the data set, and then make a new data set from this data set, by selecting just two variables.\nIs it appropriate to draw a histogram or a scatter plot of the two variables? If so, draw it. If not, why not?\nMake sure these commands are in the source window, save them as a new R file, e.g., “mypsychscidata.r”\n\nPart 2: Reproduce the Lecture week3 part3 analyses",
    "crumbs": [
      "Home",
      "PSYC411",
      "3. Drawing graphs from data"
    ]
  },
  {
    "objectID": "PSYC411/part1/Week3.html#task-2-load-in-the-data-draw-a-histogram-find-means-and-standard-deviations",
    "href": "PSYC411/part1/Week3.html#task-2-load-in-the-data-draw-a-histogram-find-means-and-standard-deviations",
    "title": "3. Drawing graphs from data",
    "section": "Task 2: Load in the data, draw a histogram, find means and standard deviations",
    "text": "Task 2: Load in the data, draw a histogram, find means and standard deviations\n\nCreate a new r script, called psyc401_week3.r, and clear out R studio ready for a new script using rm(list=ls()).\nDownload the data files on the vocabulary tests here: PSYC401-shipley-scores-anonymous-17_18.zip. You should then upload the entire zip folder to the R server.\nLoad the data into an object called “dat” using read_csv(), what command line do you use? (remember to set the working directory)\nView the data. What command do you use?\nWe can make a histogram of the first time people took the Gent vocabulary test:\n\n\nhist(dat$Gent_1_score)\n\n\nAnd a histogram of the second time people took the Gent test, what command line do you use?\nWe can find out means and standard deviations. We will use the mean() and the sd() functions. However, we need to tell R studio what to do with the missing values (called NA in the View), to do that we have to add an extra bit to the command:\n\n\nmean(dat$Gent_1_score, na.rm=TRUE)\n\nThis tells R studio to remove the NA values before computing the mean. What happens if you don’t add na.rm=TRUE?\nWhat is the mean and standard deviation of Gent_1_score and Gent_2_score?",
    "crumbs": [
      "Home",
      "PSYC411",
      "3. Drawing graphs from data"
    ]
  },
  {
    "objectID": "PSYC411/part1/Week3.html#task-3-use-ggplot-to-draw-some-histograms",
    "href": "PSYC411/part1/Week3.html#task-3-use-ggplot-to-draw-some-histograms",
    "title": "3. Drawing graphs from data",
    "section": "Task 3: Use ggplot to draw some histograms:",
    "text": "Task 3: Use ggplot to draw some histograms:\n\nNow we are going to use another way of making graphs. This is more flexible than the hist function. Here is how to make a histogram of the Gent vocabulary scores:\n\n\nggplot(dat, aes(x = Gent_1_score) ) + geom_histogram(fill=\"blue\") + labs(title=\"Gent Vocabulary Test 1\", x = \"Vocabulary Score\", y = \"Frequency\")\n\n\nAnd for the second Gent test:\n\n\nggplot(dat, aes(x = Gent_2_score) ) + geom_histogram(fill=\"red\") + labs(title=\"Gent Vocabulary Test 2\", x = \"Vocabulary Score\", y = \"Frequency\")\n\n\n\n\n\n\n\nNote\n\n\n\nBreaking it down: ggplot(dat, aes(x = Gent_1_score)): this calls the plotting function ggplot we specify the data set we will use, dat and we set the data for the plot, in this case we say that the x value (so that’s what will be along the x-axis in the graph) is the Gent_1_score. We put this inside aes(), which stands for “aesthetic”. + geom_histogram(fill=\"blue\"): this adds a graph of type histogram and colours it blue + labs(title=\"Gent Vocabulary Test\", x = \"Vocabulary Score\", y = \"Frequency\"): this adds labels to the graph: title, the x-axis label and the y-axis label.",
    "crumbs": [
      "Home",
      "PSYC411",
      "3. Drawing graphs from data"
    ]
  },
  {
    "objectID": "PSYC411/part1/Week3.html#task-4-practise-manipulating-data",
    "href": "PSYC411/part1/Week3.html#task-4-practise-manipulating-data",
    "title": "3. Drawing graphs from data",
    "section": "Task 4: Practise manipulating data",
    "text": "Task 4: Practise manipulating data\n\nLet’s keep only some of the variables from the dataset dat - let’s remove Gender_code, and Dyslexia_diagnosis. Keep the other variables using select() and load this into summarydata\n\n\nsummarydata &lt;- select(.data = dat, subject_ID, Age, english_status, Gender, Shipley_Voc_Score, Gent_1_score, Gent_2_score, academic_year)\n\n\nNext we will have a bit more of a wander around the data to get a feel for it. We will first use the function arrange(), which changes the order of observations (rows):\n\n\narrange(.data = summarydata, Shipley_Voc_Score)\n\nWhat is the lowest score of a participant on the Shipley Vocabulary questionnaire? (You may like to make a new object, which is the result of the arrange function, then look at it in View).\n\nIf you want to order from highest to lowest, you have to use the desc() function:\n\n\narrange(.data = summarydata, desc(Shipley_Voc_Score))\n\nWhat is the highest value on the Shipley Vocabulary Test? How many participants have this highest score?\n\nNext we will use the filter() function. This includes or excludes certain observations (rows). Let’s just include the participants with English as a first language and put this into a new object, called summarydata_enl. What are the mean and SD values of the Shipley Vocabulary test for the native speakers?\n\n\nsummarydata_enl &lt;- filter(.data = summarydata, english_status == 'native')\n\n\nMake another variable with the z-scores of the Shipley Vocabulary test (see week 1 workbook). What are the maximum and minimum z-scores?\nRemember to save your script file.",
    "crumbs": [
      "Home",
      "PSYC411",
      "3. Drawing graphs from data"
    ]
  },
  {
    "objectID": "PSYC411/part1/Week3.html#task-5-graphing-data-using-histograms",
    "href": "PSYC411/part1/Week3.html#task-5-graphing-data-using-histograms",
    "title": "3. Drawing graphs from data",
    "section": "Task 5: graphing data using histograms",
    "text": "Task 5: graphing data using histograms\n\nPreviously we used plot to draw a scatter plot, and hist to draw a histogram. Now, we’re going to use ggplot which can draw all kinds of graphs, with a great deal more flexibility. We are going to represent the data to reflect the following relations:\n\n\nEnglish status and gender\nAge and vocabulary score\nGender and vocabulary score\nAcademic year and vocabulary score\nAcademic year and age\nEnglish status and vocabulary score\nEnglish status and age\n\nBut first, let’s repeat reproducing the histogram from the overhead slides to look at the distribution of variables:\n\nggplot(summarydata, aes(x = Gent_1_score)) +\n  geom_histogram(fill=\"blue\") + \n  labs(title=\"Gent Vocabulary Test 1\", x = \"Vocabulary Score\", y = \"Frequency\")\n\n\nNow draw a histogram with Shipley_Voc_Score as the variable and colour it orange. Remember to change the title to something appropriate.",
    "crumbs": [
      "Home",
      "PSYC411",
      "3. Drawing graphs from data"
    ]
  },
  {
    "objectID": "PSYC411/part1/Week3.html#task-6-graphing-data-using-bar-graphs",
    "href": "PSYC411/part1/Week3.html#task-6-graphing-data-using-bar-graphs",
    "title": "3. Drawing graphs from data",
    "section": "Task 6: graphing data using bar graphs",
    "text": "Task 6: graphing data using bar graphs\n\nNext let’s look at English status and gender. What types of variable are these? Nominal? Ordinal? Interval/ratio?\nWe will draw a bar graph of the counts. We use geom_bar() for this:\n\n\nFirst try this:\n\n\nggplot(summarydata, aes(x = Gender)) + \n  geom_bar()\n\n\nThis just draws counts of Gender\nNow let’s draw Gender and English Status together:\n\n\nggplot(summarydata, aes(x = Gender, fill = english_status)) + \n  geom_bar(position = \"dodge\")\n\nNote 1: We use position dodge so that it puts the bars next to each other (what happens if you leave out position = dodge?)\nNote 2: We use fill = english_status so that it fills the different bars with different colours according to different english statuses.\nWhat is the general pattern of counts? Are there proportional differences by English status according to gender?",
    "crumbs": [
      "Home",
      "PSYC411",
      "3. Drawing graphs from data"
    ]
  },
  {
    "objectID": "PSYC411/part1/Week3.html#task-7-graphing-data-using-scatterplot",
    "href": "PSYC411/part1/Week3.html#task-7-graphing-data-using-scatterplot",
    "title": "3. Drawing graphs from data",
    "section": "Task 7: graphing data using scatterplot",
    "text": "Task 7: graphing data using scatterplot\n\nNext we’ll look at Age and Shipley Vocabulary Score. What types of data are these?\nWe will draw a point plot of these values:\n\n\nggplot(summarydata, aes(x= Age, y = Shipley_Voc_Score)) + geom_point()\n\nWe can add + labs(title = \"Age by Shipley Vocabulary Score\", x = \"Age\", y = \"Shipley Vocabulary Score\") to tidy up presentation a bit.\n\nggplot(summarydata, aes(x= Age, y = Shipley_Voc_Score)) + \n  geom_point() + \n  labs(title = \"Age by Shipley Vocabulary Score\", x = \"Age\", y = \"Shipley Vocabulary Score\")\n\n\nWhat is the relation between age and Shipley Vocabulary score?",
    "crumbs": [
      "Home",
      "PSYC411",
      "3. Drawing graphs from data"
    ]
  },
  {
    "objectID": "PSYC411/part1/Week3.html#task-8-draw-and-interpret-a-box-plot",
    "href": "PSYC411/part1/Week3.html#task-8-draw-and-interpret-a-box-plot",
    "title": "3. Drawing graphs from data",
    "section": "Task 8: Draw and interpret a box plot",
    "text": "Task 8: Draw and interpret a box plot\n\nNext on the list of relations to check is gender and vocabulary score. Let’s look at Gent_1_score against Gender. What type of variables are these?\nWe will draw a box plot (you could draw a bar graph, but box plots tend to be preferred for these combinations of variables - use a bar graph for counts):\n\n\nggplot(summarydata, aes(x= Gender, y = Gent_1_score)) + \n  geom_boxplot() \n\n\nAgain we can tidy this up by adding labels:\n\n\nggplot(summarydata, aes(x= Gender, y = Gent_1_score)) + geom_boxplot() + labs(title = \"Vocabulary Score by Gender\", x = \"Gender\", y = \"Gent Vocabulary Score Test 1\")\n\n\nInterpreting box plots: The horizontal line indicates the median. The box indicates where 50% of the data lie. The lines indicate an estimate of the range of the data (minimum and maximum values). The dots indicate outliers. A large box indicates larger standard deviation. If the boxes don’t overlap much then this indicates there may be a difference between the groups.\n\n\nAre there differences in Vocabulary according to gender?\n\n\nNow for the other relations:\n\n\nAcademic year and vocabulary score\nAcademic year and age\nEnglish status and vocabulary score\nEnglish status and age\n\nAt the moment, R is interpreting Academic year as a number. We need to turn it into a nominal variable (called a “factor” in R studio):\n\nsummarydata$academic_year &lt;- as.factor(summarydata$academic_year)\n\nDraw a graph for each of these relations.\n\nSave your R script.",
    "crumbs": [
      "Home",
      "PSYC411",
      "3. Drawing graphs from data"
    ]
  },
  {
    "objectID": "PSYC411/part1/Week1.html",
    "href": "PSYC411/part1/Week1.html",
    "title": "1. Introducing Data",
    "section": "",
    "text": "Watch Lecture week1 part1. Slides here\nWatch Lecture week1 part2, stop halfway through and do the Lecture week1 part2 quiz (not assessed), go back and watch the end of Lecture week 1 part2. slides here\nWatch Lecture week1 part3.\nTake the quiz on the lecture material (not assessed).\nWork through the practical workbook in a group (…don’t worry about groups yet, we will form them at the first practical, for now you can work on the practical workbook individually, or with anyone else on the course you are in touch with!)\nAttend the practical on Wednesday.\nPop into the drop in (optional) on Thursday, if you’d like extra support for the practical materials, or have questions about the lecture material.\nOptionally, watch the lecture by Tim Harford on the importance of understanding statistics.\n\nIn your group, work through this workbook, note any problems and questions you have, and come prepared to the online practical class to go through the tasks and ask your questions.\n\nThe first part of this workbook reproduces what you saw in the week 1 part 3 lecture.\nThe second part gives you some more exercises in using R studio for finding means, standard deviations, z scores, and drawing histograms.\nThe third part explores some more tasks you can do to practise exploring what R studio can do.",
    "crumbs": [
      "Home",
      "PSYC411",
      "1. Introducing Data"
    ]
  },
  {
    "objectID": "PSYC411/part1/Week1.html#task-one-open-rstudio",
    "href": "PSYC411/part1/Week1.html#task-one-open-rstudio",
    "title": "1. Introducing Data",
    "section": "Task One: Open Rstudio",
    "text": "Task One: Open Rstudio\nYou will have received an email with your account information to log onto From a computer on the campus wifi, you can access R Studio at:\nLancaster Psychology R Studio Server\nAt the login screen, use your university username (e.g., bloggsj)\nYour password for R Studio is: [password here]\nAs it says in the subject line, please keep your account details safe!\n\nWhat does RStudio look like?\nWhen RStudio starts, it will look something like this: \nRStudio has three panels or windows: there are tabs for Console (taking up the left hand side), Environment (and History top right), Current file (bottom right). You will also see a 4th window for a script or set of commands you develop, also (on the left hand side).",
    "crumbs": [
      "Home",
      "PSYC411",
      "1. Introducing Data"
    ]
  },
  {
    "objectID": "PSYC411/part1/Week1.html#task-two-using-the-console",
    "href": "PSYC411/part1/Week1.html#task-two-using-the-console",
    "title": "1. Introducing Data",
    "section": "Task Two: using the console",
    "text": "Task Two: using the console\n\n\n\n\n\n\nTip\n\n\n\nText that is highlighted with a grey background denotes code, rather than typiucal prose. Code is different to other forms of writing, such as essays, because the syntax, order and words need to be quite specific. For some longer chunks of code, as you will see below, they are formatted slightly differently.\n\n\n\nIn the “console” part of the R window, next to the &gt;, type 10 + 30. Press return.\n\n\n10 + 40                        \n\n\n\n\n\n\n\nTip\n\n\n\nIf you hover your mouse over the box that includes the code snippet, a ‘copy to clipboard’ icon will appear in the top right corner of the box. Click that to copy the code. Now you can easily paste it into your script.\n\n\nIt should give you the answer 40.\n\nIn the console, type a &lt;- 40 and press Return.\n\n\na &lt;- 40                      \n\nNow type a and press return. It should give you the answer 40. a is called an object, think of it like a bucket that you can keep a number, or some numbers, or actually all kinds of stuff in.\n\nNow let’s look at a function, sqrt. sqrt is a function that takes the square root of whatever is inside the brackets. In the console, type sqrt(13). Press Return.\nNow find the square root of the object a by typing sqrt(a). Press return.",
    "crumbs": [
      "Home",
      "PSYC411",
      "1. Introducing Data"
    ]
  },
  {
    "objectID": "PSYC411/part1/Week1.html#task-three-finding-distributions",
    "href": "PSYC411/part1/Week1.html#task-three-finding-distributions",
    "title": "1. Introducing Data",
    "section": "Task Three: finding distributions",
    "text": "Task Three: finding distributions\n\nMake a new object b, and put the following list of children’s attachment scores into it\n\n\nb &lt;- c( 4, 1, 5, 3, 8, 2, 2, 6, 8, 5, 4, 1, 6, 5, 4, 5, 7, 9, 10, 1, 1, 3, 5, 4, 6, 4, 8, 6, 5, 5, 7, 8, 9, 8, 8, 2, 1, 4, 3, 2, 5, 1, 5, 6, 8, 6, 7, 2, 7)\n\n\nCheck it works by typing b, press return.\nFind the mean of these numbers by typing mean(b).\nFind the median of these numbers by typing median(b).\nFind the standard deviation of these numbers by typing sd(b).\nDraw a histogram of these numbers by typing hist(b).",
    "crumbs": [
      "Home",
      "PSYC411",
      "1. Introducing Data"
    ]
  },
  {
    "objectID": "PSYC411/part1/Week1.html#task-four-z-scores",
    "href": "PSYC411/part1/Week1.html#task-four-z-scores",
    "title": "1. Introducing Data",
    "section": "Task Four: z scores",
    "text": "Task Four: z scores\n\nMake a new object b_z and assign to it the z scores of the values from b: ``\n\n\nb_z &lt;- scale(b)\n\n\nCheck that it worked by typing b_z.\nDraw a histogram of b_z by typing hist(b_z).",
    "crumbs": [
      "Home",
      "PSYC411",
      "1. Introducing Data"
    ]
  },
  {
    "objectID": "PSYC411/part1/Week1.html#task-five-investigating-distributions",
    "href": "PSYC411/part1/Week1.html#task-five-investigating-distributions",
    "title": "1. Introducing Data",
    "section": "Task Five: investigating distributions",
    "text": "Task Five: investigating distributions\n\nLet’s make three new objects, with the marks from three people’s university masters courses. They are called annie, saj, and carrie and they took 10 courses each. We use the special notation c() to indicate a list, each number in the list is separated by a comma. Type the following into the console:\n\n\nannie &lt;- c(55, 95, 85, 65, 65, 85, 65, 95, 65, 75)\nsaj &lt;- c(65, 85, 95, 75, 65, 55, 55, 75, 95, 85)\ncarrie &lt;- c(75, 65, 95, 95, 55, 85, 75, 55, 95, 55)\n\n\nWho has the highest average (mean) score for their course?\n\n\n\n\n\n\n\nHint\n\n\n\n\n\nuse the mean() function\n\n\n\n\nWho has the most variable scores for their course?\n\n\n\n\n\n\n\nHint\n\n\n\n\n\nuse the sd() function\n\n\n\n\nWhat is the median score for each student?. What does this mean about the distribution of each students’ scores? Use the function hist() to draw the distributions to help you see.\n\n\n\n\n\n\n\nHint\n\n\n\n\n\nyou can use the summary() function, or the median() function",
    "crumbs": [
      "Home",
      "PSYC411",
      "1. Introducing Data"
    ]
  },
  {
    "objectID": "PSYC411/part1/Week1.html#task-six-standardised-scores-z-scores",
    "href": "PSYC411/part1/Week1.html#task-six-standardised-scores-z-scores",
    "title": "1. Introducing Data",
    "section": "Task Six: standardised scores: Z scores",
    "text": "Task Six: standardised scores: Z scores\n\nMake a new object called annie_z and use the function scale to convert annie’s scores to z-scores: in the console type:\n\n\nannie_z &lt;- scale(annie)\n\n\nYou can have a look at the standardised scores of annie, by just typing annie_z. To what did annie’s highest initial score of 95 convert to?\nWhat is the mean and standard deviation of annie_z’s standardised scores?\nDraw a histogram of annie’s standardised scores, in the console type hist(annie_z). What is the peak frequency value?\nBonus extra: If you want to find out the proportion of scores lower than a particular score you can do it like this in R-studio: pnorm(x) where x is the z-score you’re interested in. What is the proportion of scores lower than annie’s highest grade score?",
    "crumbs": [
      "Home",
      "PSYC411",
      "1. Introducing Data"
    ]
  },
  {
    "objectID": "PSYC411/part1/Week1.html#task-seven-exploring-operators.",
    "href": "PSYC411/part1/Week1.html#task-seven-exploring-operators.",
    "title": "1. Introducing Data",
    "section": "Task Seven: Exploring operators.",
    "text": "Task Seven: Exploring operators.\nSo far, we’ve just looked at + as an operator. Go to this page: https://www.statmethods.net/management/operators.html\n\nIn the console, assign the object d to be 100 multiplied by 246.\nIn the console, assign the object e to be 84 divided by 32.1.\nAssign the variable f to 8 to the power of 4 (in R this is called exponentiation).\nWhat is the result of d added to e all divided by f\n\nTask 9: Exploring functions\nSo far, we’ve just looked at the square root function sqrt(). Go to this page: https://www.statmethods.net/management/functions.html 27. What is the result of abs(-5.3)? What does the abs function do?\n\nUsing the seq() function, generate a sequence of numbers from 0 to 30 in intervals of 3.\nAssign the sequence generated in step 28 to a new object. Now compute the mean of the sequence of numbers. (remember that objects can be a single number, or a sequence of numbers (called an array or a vector) or anything you want to put into it – remember, think of objects as buckets).\n\n\n\n\n\n\n\nStuck? Here’s the solution\n\n\n\n\n\nTry out the following code, pay special attention to how the sentences above “convert” into R code.\n\nsequence &lt;- seq(0,30, 3)\nmean(sequence)",
    "crumbs": [
      "Home",
      "PSYC411",
      "1. Introducing Data"
    ]
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Statistics for Psychologists",
    "section": "",
    "text": "Welcome\n\nWelcome to analysing and interpreting data for Masters students. For Term 1, please click on PSYC411 button below. For Term 2, please click on the PSYC412 button.\n\n\n  \n    \n\n    \n      PSYC411\n    \n    \n      PSYC412"
  },
  {
    "objectID": "PSYC411/index.html",
    "href": "PSYC411/index.html",
    "title": "Analysing and Interpreting Psychological Data I",
    "section": "",
    "text": "Welcome\nWelcome to this module PSYC411! Very glad to have you here!!\nRob Davies  and Padraic Monaghan  are the lecturers on this module.\nWe are looking forward to meeting you!\nThis module is designed for students who have never done data analysis or statistics before, as well as those who have background in this.\nWe have set up the module so that there are different exercises depending on your background.\n\nFor those who are new to data analysis and statistics, there is a week-by-week step-by-step guide to all you need to know to become a masters-level expert in interpreting and analysing psychological data.\nFor those of you who have already used our software (R-studio) for analysis before, after revising the foundations of what you need to know you can move on quickly to the extra explorative exercises where you can hone and broaden your skills.\n\n\n\nSteps to get ready\nHere are the steps to go through before the module begins, to help you prepare for the course:\nFirst: Watch this first video which is a chat between Rob Davies and Padraic Monaghan giving you a bit of an insight into what we’d like you to take from this module and what our philosophy is for teaching.\n\nSecond: Watch this welcome video (part 1) to give you an outline of how this module works:\n\nThird: Then watch this welcome video (part 2) on how to access the software for this module. Basically, what you need to do is in a web browser go to: http://psy-rstudio.lancaster.ac.uk and login with your university account name, and your university account password:\n\nNote that you can only access this website from on campus, or via the University’s VPN. For information on connecting to the VPN, see here: ISS help for VPN\n\n\nNext steps\nNext step is to go to the Week 1 materials, once they are released. We aim to release materials for the following week by Thursday of the previous week. You can navigate to the relevant week via the top left corner of the webpage.\n\n\nCourse Contacts\n\n\n\n\nEmail Address\n\n\n\n\nPadraic Monaghan\np.monaghan at lancaster dot ac dot uk\n\n\nRob Davies\nr.davies at lancaster dot ac dot uk\n\n\n\n\n\n\n\n\n\n\n\n Back to top"
  },
  {
    "objectID": "PSYC411/part1/Week2.html",
    "href": "PSYC411/part1/Week2.html",
    "title": "2. Manipulating data",
    "section": "",
    "text": "Watch Lecture week2 part 1, slides here\npart 2, slides here\npart 3, slides here\nTake the quiz on the lecture material (not assessed).\nWork through the practical workbook with your group, in the practical folder. You can find our answers to the practical 1 week1 in there as well - but it’s probably better to access that after watching the lectures for this week.\nAttend the practical on Wednesday.\nPop into the drop in (optional) on Thursday.\nComplete and submit Assignment 1 by Friday (8pm) of week 2. Data file here\nOptionally, watch Brian Nosek’s keynote at the 2018 British Psychological Society conference on the replicability crisis.",
    "crumbs": [
      "Home",
      "PSYC411",
      "2. Manipulating data"
    ]
  },
  {
    "objectID": "PSYC411/part1/Week2.html#task-zero-making-and-opening-an-r-script-file",
    "href": "PSYC411/part1/Week2.html#task-zero-making-and-opening-an-r-script-file",
    "title": "2. Manipulating data",
    "section": "Task Zero: making and opening an R script file",
    "text": "Task Zero: making and opening an R script file\n\nOpen up the R server at psy-rstudio.lancaster.ac.uk\nIn R studio, at the File menu, select New File, then R script. Now, we can put in our favourite sum to check it’s working. At the top of the R script window type 10.5 + 7. With the cursor on the same line as the sum click on the Run button (or press Ctrl+Enter on Windows, Cmd+Enter on Mac). In the console, you should see the sum being run, and the answer produced.\nSave the R source. Click on the Save icon, call the R script “psyc401_week2.r”. The .r subscript indicates to R studio that this is an R script file.\nClose the R script, by clicking on the little x next to the R script filename just above the R script window.\nNow open it again. In the R studio window File menu, select Open File, and browse to where you saved your R script file and open it.\nTo make it easier to save and open files we can set what is called the “working directory” for R studio. Click “Session” in the menu at the top of the R studio screen, select “Working directory”, then select “Choose directory”. Browse to the Folder where you are going to save your PSYC401 R studio files (for me this is Documents/PSYC401), and click Open. Over on the right lower panel, you should now see all the files that are in this Folder - including psyc401_week2.r",
    "crumbs": [
      "Home",
      "PSYC411",
      "2. Manipulating data"
    ]
  },
  {
    "objectID": "PSYC411/part1/Week2.html#task-one-open-and-check-practical-week1-workbook-answers-script-file",
    "href": "PSYC411/part1/Week2.html#task-one-open-and-check-practical-week1-workbook-answers-script-file",
    "title": "2. Manipulating data",
    "section": "Task One: open and check Practical week1 workbook answers script file",
    "text": "Task One: open and check Practical week1 workbook answers script file\n\nDownload the answers file by right-clicking the link and saving it. psyc401_week1_workbook_answers.r\nOpen psyc401_week1_workbook_answers.r in R studio (File &gt; Open File). You can now look through this document, check your commands and answers to the tasks from last week.\nClose the file psyc401_week1_workbook_answers.r",
    "crumbs": [
      "Home",
      "PSYC411",
      "2. Manipulating data"
    ]
  },
  {
    "objectID": "PSYC411/part1/Week2.html#task-two-opening-a-data-file",
    "href": "PSYC411/part1/Week2.html#task-two-opening-a-data-file",
    "title": "2. Manipulating data",
    "section": "Task Two: Opening a data file",
    "text": "Task Two: Opening a data file\n\nReopen your script file psyc401_week2.r in R studio.\nIt’s always a good idea to refresh and clear out R studio when you start a new session, so add this line to the beginning of your R studio file, rm(list=ls())\nNow we are going to open a new data file. Download the file “PSYC401-shipley-scores-anonymous-17_18.csv” from moodle PSYC401 site, from the Practical Week2 folder. Note: DO NOT OPEN THIS FILE IN EXCEL – IF YOU DO, DELETE IT THEN DOWNLOAD IT AGAIN. Each row is one person’s data, and each column is a measure taken from the person. Columns are separated by commas, which is what the “csv” refers to” comma-separated values.\nIn R studio, we open csv files using a function called read_csv() which comes from a set of functions called “tidyverse”, we can install these functions by putting library(tidyverse) at the very top of our R file. Type this command in the script file and then run it:\n\n\n\n\n\n\n\nWant to know more about library()?\n\n\n\n\n\nR comes with certain functions pre-installed, such as mean(), but part of the charm of R is that we can install different functions that give us the opportunity to do almost anything! Collections of functions are called packages, and collections of packages are called libraries, but for the purpose of practicality, we typically refer to them interchangably. We install libraries using library() and enter the name of the library in the brackets.\n\n\n\n\nlibrary(tidyverse)\n\ndat &lt;- read_csv(\"PSYC401-shipley-scores-anonymous-17_18.csv\")\n\nRemember the dat &lt;- notation, which means we put the data into an object called “dat”\n\nIf all went well, we can then look at the data, using the function View: In the script file type View(dat) and run it. It should open a spreadsheet where we can see the data.\nNext, we just focus on two variables from the data: subject_ID which is the participants’ anonymised number, and Gent_1_score, which is the participants’ score on the Gent vocabulary test, the first time they had a go (that’s what the 1 stands for). We do this using the command select. The command select is in the library “tidyverse”. In the script file type and run:\n\n\nsummarydat &lt;- select(.data = dat, subject_ID, Gent_1_score)\n\n\nFinally, let’s just have a quick look at these data. In the script file type hist(summarydat$Gent_1_score) and run it.\nThis will draw a histogram of the Gent vocabulary scores. summarydat$Gent_1_score means that we look at the Gent_1_score values from the summarydat data – the $ indicates that this is one of the measures from the data. What kind of pattern does the histogram show?",
    "crumbs": [
      "Home",
      "PSYC411",
      "2. Manipulating data"
    ]
  },
  {
    "objectID": "PSYC411/part1/Week2.html#task-four-examining-and-manipulating-data",
    "href": "PSYC411/part1/Week2.html#task-four-examining-and-manipulating-data",
    "title": "2. Manipulating data",
    "section": "Task Four: Examining and manipulating data",
    "text": "Task Four: Examining and manipulating data\n\nLet’s have a look at the data now. Type View(dat) in the source and Run it in the console, and you should see the data appear above the console window. Have a good long hard look at it.\nThe data shows id which is the participant number, occasion which is whether this is the first (0), second (1), up to sixth (5) time they filled in the questionnaires, intervention is which intervention they took part in with respect to attempting to promote their mood, ahi01-ahi24 are the 24 items on the AHI happiness scale, cesd01-cesd20 are the 20 items on the CESD depression scale. Way over on the right are the total scores on the AHI and the CESD questionnaires.\nNow, view the pinfo data. How can you look at it?\nLooking at the data replaced the source window, but the source is still there. Just above the View panel you should see a tab named “psyc401_week2.r”, click on that to get your source panel back. It will have a star/asterisk after the file name if it is unsaved. Remember it’s a good idea to regularly save your source file so you don’t lose work.\nNow, we are going to join together the two files. Type this:\n\n\nall_dat &lt;- inner_join(x = dat, y = pinfo, by = c('id', 'intervention'))\n\n\nQuestion: what does the c(“id”, “intervention”) bit mean?\n\n::: {.callout-warning icon=false collapse=“true”} ## Answer this means we match by two variables – id and intervention. We use the c() notation to indicate that this is a list of things.\nWe’ve now made a new data set called “all_dat”. The “x = dat” bit is the name of the first datafile we want to join, the “y = pinfo” is the name of the second datafile we want to join, the “by = ‘id’, ‘intervention’” bit is the names of variables that the two datasets have in common. :::\n\nHow would you join two data sets one called “datamad” the other called “datasane” together if they both have the variable “participantname” in common?\n\n\n\n\n\n\n\nAnswer\n\n\n\n\n\n\ndata_full &lt;- inner_join(x = datamad, y = datasane, by = c(\"participantname\"))\n\n\n\n\n\nNow we just want to keep a few of the variables – we’re not interested in the individual questionnaire items. So, let’s select the variables we want to keep:\n\n\nsummarydata &lt;- select(.data = all_dat, ahiTotal, cesdTotal, sex, age, educ, income, occasion, intervention)\n\nWhere “all_dat” is the name of the object to take data from, and “ahiTotal, cesdTotal, sex, age, educ, income, occasion, intervention” are all the variables we want to keep.\n\nHave a look at the summarydata in the View. How do you do that?",
    "crumbs": [
      "Home",
      "PSYC411",
      "2. Manipulating data"
    ]
  },
  {
    "objectID": "PSYC411/part1/Week2.html#task-five-investigate-data",
    "href": "PSYC411/part1/Week2.html#task-five-investigate-data",
    "title": "2. Manipulating data",
    "section": "Task Five: Investigate data",
    "text": "Task Five: Investigate data\n\nThe next task is to have a closer look at the distributions of the data. Let’s focus on the age of participants. To investigate one column of data from a dataset, you have to refer to it using the “$” symbol. So, to investigate the “age” column from the “summarydata” dataset, you would look at summarydata$age. Draw a histogram (bar graph) of the distribution of age in the participant sample.\nNow, let’s look at how the AHI and the CESD scores relate. To gain an impression of how two variables relate we can draw a scatter graph. In the console, type plot(summarydata$ahiTotal, summarydata$cesdTotal), press Return. What does the “$” do in this command? What relationship do you find between these two variables?\nNow make sure you save psyc401_week2.r that contains all these commands that you ran. Close Rstudio, and Open Rstudio and make sure its saved all your work. The list of commands is extremely useful for making science open and accessible to other researchers. It’s more and more common for psychology articles to make the R source files available so other researchers can reproduce the data manipulations and analyses used in the paper precisely.",
    "crumbs": [
      "Home",
      "PSYC411",
      "2. Manipulating data"
    ]
  },
  {
    "objectID": "PSYC411/part1/Week2.html#task-six-wide-to-long-format-conversion",
    "href": "PSYC411/part1/Week2.html#task-six-wide-to-long-format-conversion",
    "title": "2. Manipulating data",
    "section": "Task Six: Wide to long format conversion",
    "text": "Task Six: Wide to long format conversion\n\nLet’s go back to the psyc401-shipley-scores-anonymous-17_18.csv data. This should still be in the object called “dat”. If it’s not, then load the data again into dat, using the read_csv() function.\nMake sure the library(tidyverse) is loaded, if not, run the command library(tidyverse).\nThe aim here is to convert the data so that each Gent vocabulary score is on a separate line, we use the pivot_longer function for this. First we specify what the new object should be (datlong), then we say where the old data is (dat), then we make a new variable to keep the names of the tests (names_to = “test”), then we make a new variable to keep the scores from the tests (values_to = “vocab”), then we specify the list of old variables to combine into the new scores variable (c(“Gent_1_score”, “Gent_2_score”) ) – remember lists are written as c(). So, run this command:\n\n\ndatlong &lt;- pivot_longer(dat, names_to = \"test\", values_to = \"vocab\", cols = c(\"Gent_1_score\", \"Gent_2_score\")) \n\n\nHave a look at the new object datlong that results: View(datlong). This function pivot_longer has taken as input the data in dat, it has created a new variable called “test” which reports whether it is the Gent_1_score or the Gent_2_score that is the measurement, and a new variable called “vocab” where the actual scores are listed. Then, the following list of variables let’s the function pivot_longer know which variables from the object dat we are converting (or lengthening). It also includes all the other variables, but unconverted. How many rows of data are there now corresponding to data from subject_ID number 1?\nLet’s tidy things up so we only have subject_ID, and the Gent vocabulary scores by using select:\n\n\ndatlongsummary &lt;- select(datlong, subject_ID, test, vocab)",
    "crumbs": [
      "Home",
      "PSYC411",
      "2. Manipulating data"
    ]
  },
  {
    "objectID": "PSYC411/part1/Week2.html#task-seven-long-to-wide-format-conversion",
    "href": "PSYC411/part1/Week2.html#task-seven-long-to-wide-format-conversion",
    "title": "2. Manipulating data",
    "section": "Task Seven: Long to wide format conversion",
    "text": "Task Seven: Long to wide format conversion\n\nNow, we will have a go at converting from long to wide format. Let’s start with the datlongsummary object. We will convert this so that Gent_1_score and Gent_2_score are listed alongside each other – one row per person. The command for this is the reverse of pivot_longer, called pivot_wider. Run this command: datwide &lt;- pivot_wider(datlongsummary, names_from = \"test\", values_from = \"vocab\"). This command takes the data from datlongsummary and puts the different measures reported in the variable test into different columns again, filling in the values from the variable vocab.",
    "crumbs": [
      "Home",
      "PSYC411",
      "2. Manipulating data"
    ]
  },
  {
    "objectID": "PSYC411/part1/Week4.html",
    "href": "PSYC411/part1/Week4.html",
    "title": "4. Testing nominal data",
    "section": "",
    "text": "Watch Lecture week 4 part 1, slides here\nPart 2, slides here.\nPart 3, slides here.\nTake the quiz (not assessed) on the lecture materials.\nSee the guides to reporting numbers and statistical tests in American Psychological Association format (the format that we use in Psychology for all reports).\nWork through the materials for the Practical week 4 below.\nCome to the practical.\nPop into the drop in (optional).\nComplete Assignment 2 by Friday 4th November 8pm (this requires the two Assignment 2 data files as well).\nWatch the clip of the Titanic film if you like (not assessed!).\nRead what is a p-value\n\nThe materials in this workbook share some material with Glasgow University Psychology Department Teaching in R website",
    "crumbs": [
      "Home",
      "PSYC411",
      "4. Testing nominal data"
    ]
  },
  {
    "objectID": "PSYC411/part1/Week4.html#task-1-your-data-from-the-paper-in-psychological-science",
    "href": "PSYC411/part1/Week4.html#task-1-your-data-from-the-paper-in-psychological-science",
    "title": "4. Testing nominal data",
    "section": "Task 1: Your data from the paper in Psychological Science",
    "text": "Task 1: Your data from the paper in Psychological Science\n\nYour take-home task was to produce some graphs of the data set downloaded from a paper in Psychological Science. Show your graphs and R script to the rest of your group.",
    "crumbs": [
      "Home",
      "PSYC411",
      "4. Testing nominal data"
    ]
  },
  {
    "objectID": "PSYC411/part1/Week4.html#task-2-load-in-the-data",
    "href": "PSYC411/part1/Week4.html#task-2-load-in-the-data",
    "title": "4. Testing nominal data",
    "section": "Task 2: Load in the Data",
    "text": "Task 2: Load in the Data\n\nRemember to clear out R first:\n\n\nrm(list=ls())\n\nThe data set on the Shipley and Gent vocabulary scores is now updated with the data from your group, so it now contains five years of PSYC401 students’ data. I’ve omitted Age as this might impact anonymity of the data. Download the data from the week 4 moodle folder: “PSYC401-shipley-scores-anonymous-17_22.csv” and read the data into an object in R studio called vdat (for vocabulary data).\n\nAs a reminder, when we want to look at a particular variable (a column) in an object in R studio, we refer to it using the $ notation. So, for the object vdat and the variable academic_year you would refer to it as vdat$academic_year. For this data set, we need to change academic year to be a nominal (factor) variable. Why does academic year have to be nominal and not interval/ratio?:\n\n\nvdat$academic_year &lt;- as.factor(vdat$academic_year)\n\nview(vdat) #view the data\n\n\nMake sure the tidyverse library is loaded. Select all the variables apart from Dyslexia_diagnosis and Age and save as a new object called “summaryvdat”. We will omit these variables because they are not complete for the dataset.\n\n\n\n\n\n\n\nHint\n\n\n\n\n\n\nlibrary(tidyverse)\n\nsummaryvdat &lt;- select(vdat, -c(Dyslexia_diagnosis, Age))\n\n-c(Dyslexia_diagnosis, Age) is a quicker way to “unselect” variables. The negative sign means select all columns except for these listed in c(). The alternative is to type every column you want to keep.\n\n\n\n\nArrange the data according to Gent_2_score, from highest to lowest. Save this as a new object called “summaryvdat_sort”",
    "crumbs": [
      "Home",
      "PSYC411",
      "4. Testing nominal data"
    ]
  },
  {
    "objectID": "PSYC411/part1/Week4.html#task-3-draw-graphs-of-the-vocabulary-data",
    "href": "PSYC411/part1/Week4.html#task-3-draw-graphs-of-the-vocabulary-data",
    "title": "4. Testing nominal data",
    "section": "Task 3: Draw Graphs of the Vocabulary Data",
    "text": "Task 3: Draw Graphs of the Vocabulary Data\n\nDraw graphs of the following relations:\n\n\nEnglish status and academic year\nGender and academic year\nVocabulary score and academic year\n\n\nSave your script file.",
    "crumbs": [
      "Home",
      "PSYC411",
      "4. Testing nominal data"
    ]
  },
  {
    "objectID": "PSYC411/part1/Week4.html#task-4-loading-and-joining-data-in-r-studio",
    "href": "PSYC411/part1/Week4.html#task-4-loading-and-joining-data-in-r-studio",
    "title": "4. Testing nominal data",
    "section": "Task 4: Loading and joining data in R studio",
    "text": "Task 4: Loading and joining data in R studio\n\nNow, let’s clear out R-studio before we get started again using rm(list=ls()).\nGo to the data files from week 2 and load them into Rstudio again (“ahicesd.csv”, and “participantinfo.csv”). You can redownload them here.\n\n\nRemember these data come from this study: Woodworth, R.J., O’Brien-Malone, A., Diamond, M.R. and Schuz, B. (2018). Data from, “Web-based Positive Psychology Interventions: A Reexamination of Effectiveness”. Journal of Open Psychology Data, 6(1).\nRemind yourself of the aim of the study and the variables that are in the data set (see end of this script file for repeat description on the study).\n\n\nNext, load and join the ahicesd.csv and participantinfo.csv data in R studio. Call the joined data set “all_dat” (see week 2 workbook for reminders about this)",
    "crumbs": [
      "Home",
      "PSYC411",
      "4. Testing nominal data"
    ]
  },
  {
    "objectID": "PSYC411/part1/Week4.html#task-5-selecting-and-manipulating-data",
    "href": "PSYC411/part1/Week4.html#task-5-selecting-and-manipulating-data",
    "title": "4. Testing nominal data",
    "section": "Task 5: Selecting and manipulating data",
    "text": "Task 5: Selecting and manipulating data\n\nWe’re not interested in the individual questionnaire items. So, let’s select all the variables we want to keep (omitting the individual questionnaire items), and save this to an object called summary_all_dat (again see week 2 workbook for reminder)\nNext, we will add another variable to the data. We use the function mutate() for this. Let’s scale the ahiTotal and cesdTotal values and add them to the summary_all_dat set.\n\n\nsummary_all_dat_scale &lt;- mutate(.data = summary_all_dat, ahiTotalscale = scale(ahiTotal), cesdTotalscale = scale(cesdTotal))\n\n\nWhat are the minimum and maximum values of the new variable ahiTotalscale?\n\n\n\n\n\n\n\nHint\n\n\n\n\n\nhint: use the arrange() function, or the min() and max() functions.\n\n\n\n\nWhat do these scale values mean? (reminder: they are Z scores).\n\n\nThe next way we will work with the data is to organise the observations into different groups. First of all, here is the function summarise(). This works by summarising the results of a data set according to a particular measure. So, instead of mean(summary_all_dat_scale$ahiTotal) you can use this, which turns out to be a much more powerful way of looking at the data:\n\n\nsummarise(.data = summary_all_dat_scale, mean(ahiTotal))\n\n\nThey should give the same results - check that they do. This function summarise() is more powerful because you can look at several values at the same time, e.g.:\n\n\nsummarise(.data = summary_all_dat_scale, mean(ahiTotal), sd(ahiTotal), mean(cesdTotal), sd(cesdTotal))\n\n\nWhat is the result of this command?\n\n\nBut now let’s think about what kind of patterns we’d like to investigate in the data. There are four interventions conducted in this study. Let’s look at each of these interventions and their effect of ahiTotal and cesdTotal. We can look at subgroups of data either by using the filter() function, or by using the function group_by(). The advantage of group_by() is that we can look at several groups at the same time, rather than dividing up the data file into pieces. Let’s organise by the different interventions.\n\n\nsummary_all_dat_scale_intervention &lt;- group_by(.data = summary_all_dat_scale, intervention)\n\n\nThis command takes the data summary_all_dat_scale, and then groups it according to the four interventions in the data. We can’t yet see any difference in summary_all_dat_scale_intervention but it’s in there, lurking, just waiting. Now, we can look at the means for each intervention using the summary function again. Run the summary function on summarydata_scale_intervention. What happens?\n\n\nYou can also group by several factors at the same time. We can group by intervention and get means and standard deviations, but that is not going to give us a huge amount of insight into how the interventions affect the happiness measure because we are combining the mean of ahiTotal across all occasions of testing, including testing before the intervention has been applied.\n\nSo, let’s group by intervention and occasion of testing:\n\nsummary_all_dat_intocc &lt;- group_by(.data = summary_all_dat_scale, intervention, occasion)\n\n\nNow produce the means and standard deviations of the happiness score (ahiTotal) for each intervention at each testing occasion.\n\n\nThis doesn’t print all the lines out, so you can make a new object (e.g., called sum_output) and view that, or you can filter out some of the lines so we only look at the first and second occasion of testing.\n\n\nsum_output &lt;- summarise(.data = summary_all_dat_intocc, mean(ahiTotal), sd(ahiTotal))\nView(sum_output)",
    "crumbs": [
      "Home",
      "PSYC411",
      "4. Testing nominal data"
    ]
  },
  {
    "objectID": "PSYC411/part1/Week4.html#task-6-graph-some-groups",
    "href": "PSYC411/part1/Week4.html#task-6-graph-some-groups",
    "title": "4. Testing nominal data",
    "section": "Task 6: Graph some groups",
    "text": "Task 6: Graph some groups\n\nDraw a scatter plot of ahiTotal and cesdTotal values for the whole data set.\n\n\n\n\n\n\n\nHint\n\n\n\n\n\nUse the ggplot() function with geom_point()\n\n\n\n\nMake it a bit more beautiful using the labs() addition.\n\n\nNow redraw the plot, but colour the points according to whether they are first, second, third, etc occasion of testing. Add in col = \"occasion\" into the aes() part of the geom_point function, so that this part looks like this: aes(x = ahiTotal, y = cesdTotal, col = occasion)",
    "crumbs": [
      "Home",
      "PSYC411",
      "4. Testing nominal data"
    ]
  },
  {
    "objectID": "PSYC411/part1/Week4.html#task-7-chi-squared-and-cramers-v",
    "href": "PSYC411/part1/Week4.html#task-7-chi-squared-and-cramers-v",
    "title": "4. Testing nominal data",
    "section": "Task 7: Chi-squared and Cramer’s V",
    "text": "Task 7: Chi-squared and Cramer’s V\n\nLet’s now have a look at running Chi-squared and Cramer’s V tests in R. download this week’s data from here. Read titanic.csv into an object called “titanic”. View the data. It should correspond to the data in the overhead slides.\nMake a bar graph to count the numbers of survived and died by class.\nNow let’s see if there is a significant relation between class and survival using Chi-squared:\n\n\nchisq.test(x = titanic$class, y = titanic$survival)\n\n\nThe results give the chi-squared value, the number of degrees of freedom, and the p-value. P = 2.2e-16 means p = .0000000000000022. That’s highly significant. That means the observations are divided across the categories in a way that is very unlikely to be due to chance (for this number (P = 2.2e-16), it means there’s a 2 in a quadrillion chance that titanic survival was not related to class). In a report, you would write: Chi-squared(2, N= 1309) = 127.86, p &lt; .001.\n\n\nNow, let’s compute Cramer’s V. First, we need to make sure we have the package lsr.\n\n\nlibrary(lsr)\n\n\nThen run the test:\n\n\ncramersV(x = titanic$class, y = titanic$survival)\n\n\nYour next task is to run some Chi-squared and Cramer’s V tests on some of the other nominal data. Open the data “PSYC401-shipley-scores-anonymous-17_22.csv” again. Investigate the association between gender and year (are there different distributions of males and females in each of our masters’ year cohorts) using Chi-squared and Cramer’s V. Is it significant?\nWhat about the association between english_status and Gender?\nWhat about the association between english_status and academic year?",
    "crumbs": [
      "Home",
      "PSYC411",
      "4. Testing nominal data"
    ]
  },
  {
    "objectID": "PSYC411/part1/Week4.html#task-8-more-chi-squared-and-cramers-v-tests",
    "href": "PSYC411/part1/Week4.html#task-8-more-chi-squared-and-cramers-v-tests",
    "title": "4. Testing nominal data",
    "section": "Task 8: More Chi-squared and Cramer’s V tests",
    "text": "Task 8: More Chi-squared and Cramer’s V tests\n\nLook at the “ahicesd.csv” and “participantinfo.csv” data sets from week 2 again. Which nominal measures could you look at an association between? Report the Chi-squared test and Cramer’s V results for these associations. Are these associations significant? How do you interpret the significant associations?\nHave a further browse of Psychological Science for data sets that you can download and begin to explore. Practise applying the data manipulation and graphing functions to these data sets.\n\nDescription of Woodworth, R.J., O’Brien-Malone, A., Diamond, M.R. and Schuz, B. (2018). Data from, “Web-based Positive Psychology Interventions: A Reexamination of Effectiveness”. Journal of Open Psychology Data, 6(1).\n\nIn our study we attempted a partial replication of the study of Seligman, Steen, Park, and Peterson (2005) which had suggested that the web-based delivery of positive psychology exercises could, as the consequence of containing specific, powerful therapeutic ingredients, effect greater increases in happiness and greater reductions in depression than could a placebo control. Participants (n=295) were randomly allocated to one of four intervention groups referred to, in accordance with the terminology in Seligman et al. (2005) as 1: Using Signature Strengths; 2: Three Good Things; 3: Gratitude Visit; 4: Early Memories (placebo control). At the commencement of the study, participants provided basic demongraphic information (age, sex, education, income) in addition to completing a pretest on the Authentic Happiness Inventory (AHI) and the Center for Epidemiologic Studies-Depression (CES-D) scale. Participants were asked to complete intervention-related activities during the week following the pretest. Futher measurements were then made on the AHI and CESD immediately after the intervention period (‘posttest’) and then 1 month after the posttest (day 38), 3 months after the posttest (day 98), and 6 months after the posttest (day 189). Participants were not able to to complete a follow-up questionnaire prior to the time that it was due but might have completed at either at the time that it was due, or later. We recorded the date and time at which follow-up questionnaires were completed.",
    "crumbs": [
      "Home",
      "PSYC411",
      "4. Testing nominal data"
    ]
  }
]