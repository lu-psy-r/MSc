[
  {
    "objectID": "PSYC411/part1/Week3.html",
    "href": "PSYC411/part1/Week3.html",
    "title": "3. Drawing graphs from data",
    "section": "",
    "text": "Watch Lecture week3 part1, slides here\nHave a go at the Gent Vocabulary test, and record your score.\nHave another go at the Gent Vocabulary test, and record your score again.\nHave a go at the Shipley Vocabulary test, and record your score. Scoring sheet here\nFill in your vocabulary scores into our course database: What is your vocabulary?\nWatch Lecture week3 part2, slides here.\nWatch Lecture week3 part3, slides here.\nDo the quick quiz.\nGo through the Practical week3 workbook below.\nAttend the practical.\nPop into the drop in (optional).\n\nAnd hey presto, that’s all done!",
    "crumbs": [
      "Home",
      "PSYC411",
      "3. Drawing graphs from data"
    ]
  },
  {
    "objectID": "PSYC411/part1/Week3.html#task-1-describe-and-load-the-data-set-you-found-for-your-take-home-task",
    "href": "PSYC411/part1/Week3.html#task-1-describe-and-load-the-data-set-you-found-for-your-take-home-task",
    "title": "3. Drawing graphs from data",
    "section": "Task 1: Describe and load the data set you found for your take-home task",
    "text": "Task 1: Describe and load the data set you found for your take-home task\n\nYour take-home task was to download a data set that accompanied a paper published in Psychological Science. Describe this data set to the rest of your group.\nLoad your data set into Rstudio.\n\n\n\n\n\n\n\nHint\n\n\n\n\n\nuse read_csv(), or one of the other read functions from the last part of the Practical week2 workbook. You may need to load library(tidyverse).\n\n\n\n\nView the data set, and then make a new data set from this data set, by selecting just two variables.\nIs it appropriate to draw a histogram or a scatter plot of the two variables? If so, draw it. If not, why not?\nMake sure these commands are in the source window, save them as a new R file, e.g., “mypsychscidata.r”\n\nPart 2: Reproduce the Lecture week3 part3 analyses",
    "crumbs": [
      "Home",
      "PSYC411",
      "3. Drawing graphs from data"
    ]
  },
  {
    "objectID": "PSYC411/part1/Week3.html#task-2-load-in-the-data-draw-a-histogram-find-means-and-standard-deviations",
    "href": "PSYC411/part1/Week3.html#task-2-load-in-the-data-draw-a-histogram-find-means-and-standard-deviations",
    "title": "3. Drawing graphs from data",
    "section": "Task 2: Load in the data, draw a histogram, find means and standard deviations",
    "text": "Task 2: Load in the data, draw a histogram, find means and standard deviations\n\nCreate a new r script, called psyc401_week3.r, and clear out R studio ready for a new script using rm(list=ls()).\nDownload the data files on the vocabulary tests here: PSYC401-shipley-scores-anonymous-17_18.zip. You should then upload the entire zip folder to the R server.\nLoad the data into an object called “dat” using read_csv(), what command line do you use? (remember to set the working directory)\nView the data. What command do you use?\nWe can make a histogram of the first time people took the Gent vocabulary test:\n\n\nhist(dat$Gent_1_score)\n\n\nAnd a histogram of the second time people took the Gent test, what command line do you use?\nWe can find out means and standard deviations. We will use the mean() and the sd() functions. However, we need to tell R studio what to do with the missing values (called NA in the View), to do that we have to add an extra bit to the command:\n\n\nmean(dat$Gent_1_score, na.rm=TRUE)\n\nThis tells R studio to remove the NA values before computing the mean. What happens if you don’t add na.rm=TRUE?\nWhat is the mean and standard deviation of Gent_1_score and Gent_2_score?",
    "crumbs": [
      "Home",
      "PSYC411",
      "3. Drawing graphs from data"
    ]
  },
  {
    "objectID": "PSYC411/part1/Week3.html#task-3-use-ggplot-to-draw-some-histograms",
    "href": "PSYC411/part1/Week3.html#task-3-use-ggplot-to-draw-some-histograms",
    "title": "3. Drawing graphs from data",
    "section": "Task 3: Use ggplot to draw some histograms:",
    "text": "Task 3: Use ggplot to draw some histograms:\n\nNow we are going to use another way of making graphs. This is more flexible than the hist function. Here is how to make a histogram of the Gent vocabulary scores:\n\n\nggplot(dat, aes(x = Gent_1_score) ) + geom_histogram(fill=\"blue\") + labs(title=\"Gent Vocabulary Test 1\", x = \"Vocabulary Score\", y = \"Frequency\")\n\n\nAnd for the second Gent test:\n\n\nggplot(dat, aes(x = Gent_2_score) ) + geom_histogram(fill=\"red\") + labs(title=\"Gent Vocabulary Test 2\", x = \"Vocabulary Score\", y = \"Frequency\")\n\n\n\n\n\n\n\nNote\n\n\n\nBreaking it down: ggplot(dat, aes(x = Gent_1_score)): this calls the plotting function ggplot we specify the data set we will use, dat and we set the data for the plot, in this case we say that the x value (so that’s what will be along the x-axis in the graph) is the Gent_1_score. We put this inside aes(), which stands for “aesthetic”. + geom_histogram(fill=\"blue\"): this adds a graph of type histogram and colours it blue + labs(title=\"Gent Vocabulary Test\", x = \"Vocabulary Score\", y = \"Frequency\"): this adds labels to the graph: title, the x-axis label and the y-axis label.",
    "crumbs": [
      "Home",
      "PSYC411",
      "3. Drawing graphs from data"
    ]
  },
  {
    "objectID": "PSYC411/part1/Week3.html#task-4-practise-manipulating-data",
    "href": "PSYC411/part1/Week3.html#task-4-practise-manipulating-data",
    "title": "3. Drawing graphs from data",
    "section": "Task 4: Practise manipulating data",
    "text": "Task 4: Practise manipulating data\n\nLet’s keep only some of the variables from the dataset dat - let’s remove Gender_code, and Dyslexia_diagnosis. Keep the other variables using select() and load this into summarydata\n\n\nsummarydata &lt;- select(.data = dat, subject_ID, Age, english_status, Gender, Shipley_Voc_Score, Gent_1_score, Gent_2_score, academic_year)\n\n\nNext we will have a bit more of a wander around the data to get a feel for it. We will first use the function arrange(), which changes the order of observations (rows):\n\n\narrange(.data = summarydata, Shipley_Voc_Score)\n\nWhat is the lowest score of a participant on the Shipley Vocabulary questionnaire? (You may like to make a new object, which is the result of the arrange function, then look at it in View).\n\nIf you want to order from highest to lowest, you have to use the desc() function:\n\n\narrange(.data = summarydata, desc(Shipley_Voc_Score))\n\nWhat is the highest value on the Shipley Vocabulary Test? How many participants have this highest score?\n\nNext we will use the filter() function. This includes or excludes certain observations (rows). Let’s just include the participants with English as a first language and put this into a new object, called summarydata_enl. What are the mean and SD values of the Shipley Vocabulary test for the native speakers?\n\n\nsummarydata_enl &lt;- filter(.data = summarydata, english_status == 'native')\n\n\nMake another variable with the z-scores of the Shipley Vocabulary test (see week 1 workbook). What are the maximum and minimum z-scores?\nRemember to save your script file.",
    "crumbs": [
      "Home",
      "PSYC411",
      "3. Drawing graphs from data"
    ]
  },
  {
    "objectID": "PSYC411/part1/Week3.html#task-5-graphing-data-using-histograms",
    "href": "PSYC411/part1/Week3.html#task-5-graphing-data-using-histograms",
    "title": "3. Drawing graphs from data",
    "section": "Task 5: graphing data using histograms",
    "text": "Task 5: graphing data using histograms\n\nPreviously we used plot to draw a scatter plot, and hist to draw a histogram. Now, we’re going to use ggplot which can draw all kinds of graphs, with a great deal more flexibility. We are going to represent the data to reflect the following relations:\n\n\nEnglish status and gender\nAge and vocabulary score\nGender and vocabulary score\nAcademic year and vocabulary score\nAcademic year and age\nEnglish status and vocabulary score\nEnglish status and age\n\nBut first, let’s repeat reproducing the histogram from the overhead slides to look at the distribution of variables:\n\nggplot(summarydata, aes(x = Gent_1_score)) +\n  geom_histogram(fill=\"blue\") + \n  labs(title=\"Gent Vocabulary Test 1\", x = \"Vocabulary Score\", y = \"Frequency\")\n\n\nNow draw a histogram with Shipley_Voc_Score as the variable and colour it orange. Remember to change the title to something appropriate.",
    "crumbs": [
      "Home",
      "PSYC411",
      "3. Drawing graphs from data"
    ]
  },
  {
    "objectID": "PSYC411/part1/Week3.html#task-6-graphing-data-using-bar-graphs",
    "href": "PSYC411/part1/Week3.html#task-6-graphing-data-using-bar-graphs",
    "title": "3. Drawing graphs from data",
    "section": "Task 6: graphing data using bar graphs",
    "text": "Task 6: graphing data using bar graphs\n\nNext let’s look at English status and gender. What types of variable are these? Nominal? Ordinal? Interval/ratio?\nWe will draw a bar graph of the counts. We use geom_bar() for this:\n\n\nFirst try this:\n\n\nggplot(summarydata, aes(x = Gender)) + \n  geom_bar()\n\n\nThis just draws counts of Gender\nNow let’s draw Gender and English Status together:\n\n\nggplot(summarydata, aes(x = Gender, fill = english_status)) + \n  geom_bar(position = \"dodge\")\n\nNote 1: We use position dodge so that it puts the bars next to each other (what happens if you leave out position = dodge?)\nNote 2: We use fill = english_status so that it fills the different bars with different colours according to different english statuses.\nWhat is the general pattern of counts? Are there proportional differences by English status according to gender?",
    "crumbs": [
      "Home",
      "PSYC411",
      "3. Drawing graphs from data"
    ]
  },
  {
    "objectID": "PSYC411/part1/Week3.html#task-7-graphing-data-using-scatterplot",
    "href": "PSYC411/part1/Week3.html#task-7-graphing-data-using-scatterplot",
    "title": "3. Drawing graphs from data",
    "section": "Task 7: graphing data using scatterplot",
    "text": "Task 7: graphing data using scatterplot\n\nNext we’ll look at Age and Shipley Vocabulary Score. What types of data are these?\nWe will draw a point plot of these values:\n\n\nggplot(summarydata, aes(x= Age, y = Shipley_Voc_Score)) + geom_point()\n\nWe can add + labs(title = \"Age by Shipley Vocabulary Score\", x = \"Age\", y = \"Shipley Vocabulary Score\") to tidy up presentation a bit.\n\nggplot(summarydata, aes(x= Age, y = Shipley_Voc_Score)) + \n  geom_point() + \n  labs(title = \"Age by Shipley Vocabulary Score\", x = \"Age\", y = \"Shipley Vocabulary Score\")\n\n\nWhat is the relation between age and Shipley Vocabulary score?",
    "crumbs": [
      "Home",
      "PSYC411",
      "3. Drawing graphs from data"
    ]
  },
  {
    "objectID": "PSYC411/part1/Week3.html#task-8-draw-and-interpret-a-box-plot",
    "href": "PSYC411/part1/Week3.html#task-8-draw-and-interpret-a-box-plot",
    "title": "3. Drawing graphs from data",
    "section": "Task 8: Draw and interpret a box plot",
    "text": "Task 8: Draw and interpret a box plot\n\nNext on the list of relations to check is gender and vocabulary score. Let’s look at Gent_1_score against Gender. What type of variables are these?\nWe will draw a box plot (you could draw a bar graph, but box plots tend to be preferred for these combinations of variables - use a bar graph for counts):\n\n\nggplot(summarydata, aes(x= Gender, y = Gent_1_score)) + \n  geom_boxplot() \n\n\nAgain we can tidy this up by adding labels:\n\n\nggplot(summarydata, aes(x= Gender, y = Gent_1_score)) + geom_boxplot() + labs(title = \"Vocabulary Score by Gender\", x = \"Gender\", y = \"Gent Vocabulary Score Test 1\")\n\n\nInterpreting box plots: The horizontal line indicates the median. The box indicates where 50% of the data lie. The lines indicate an estimate of the range of the data (minimum and maximum values). The dots indicate outliers. A large box indicates larger standard deviation. If the boxes don’t overlap much then this indicates there may be a difference between the groups.\n\n\nAre there differences in Vocabulary according to gender?\n\n\nNow for the other relations:\n\n\nAcademic year and vocabulary score\nAcademic year and age\nEnglish status and vocabulary score\nEnglish status and age\n\nAt the moment, R is interpreting Academic year as a number. We need to turn it into a nominal variable (called a “factor” in R studio):\n\nsummarydata$academic_year &lt;- as.factor(summarydata$academic_year)\n\nDraw a graph for each of these relations.\n\nSave your R script.",
    "crumbs": [
      "Home",
      "PSYC411",
      "3. Drawing graphs from data"
    ]
  },
  {
    "objectID": "PSYC411/part1/Week1.html",
    "href": "PSYC411/part1/Week1.html",
    "title": "Week 1. Introducing Data",
    "section": "",
    "text": "This week, there are three mini lectures, and then a practical workbook to get you going with R-studio.\nBefore the practical on Tuesday, please try to work through the practical workbook (in the first practical we will form groups of people to work together on the workbooks, for now you can work on the practical workbook individually or with anyone else on the course you are in touch with!).\nBring your questions (and/or answers) to the practical.",
    "crumbs": [
      "Home",
      "PSYC411",
      "Week 1. Introducing Data"
    ]
  },
  {
    "objectID": "PSYC411/part1/Week1.html#overview",
    "href": "PSYC411/part1/Week1.html#overview",
    "title": "Week 1. Introducing Data",
    "section": "",
    "text": "This week, there are three mini lectures, and then a practical workbook to get you going with R-studio.\nBefore the practical on Tuesday, please try to work through the practical workbook (in the first practical we will form groups of people to work together on the workbooks, for now you can work on the practical workbook individually or with anyone else on the course you are in touch with!).\nBring your questions (and/or answers) to the practical.",
    "crumbs": [
      "Home",
      "PSYC411",
      "Week 1. Introducing Data"
    ]
  },
  {
    "objectID": "PSYC411/part1/Week1.html#learning-goals",
    "href": "PSYC411/part1/Week1.html#learning-goals",
    "title": "Week 1. Introducing Data",
    "section": "1.2 Learning Goals",
    "text": "1.2 Learning Goals\nBy the end of Week 1, you should be able to:\n\nUnderstand the importance of data analysis and statistics\nIdentify types of data in psychology (nominal, ordinal, interval, ratio)\nUnderstand means and standard deviations\nUnderstand standardized scores (Z-scores)\nUse R-studio to begin to manipulate data, investigate means and standard deviations, and convert scores into Z-scores",
    "crumbs": [
      "Home",
      "PSYC411",
      "Week 1. Introducing Data"
    ]
  },
  {
    "objectID": "PSYC411/part1/Week1.html#lectures",
    "href": "PSYC411/part1/Week1.html#lectures",
    "title": "Week 1. Introducing Data",
    "section": "1.3 Lectures",
    "text": "1.3 Lectures\nWatch Lecture week1 part1:\n\n\nWatch Lecture week1 part2, stop halfway through and do the Lecture week1 part2 quiz (not assessed), by clicking here\nThen come back and watch the end of Lecture week 1 part2:\n\nWatch Lecture week1 part3:\n\nTake the quiz on the lecture material (not assessed), by clicking here\nDownload the lecture slides for part 1 here and part 2 here",
    "crumbs": [
      "Home",
      "PSYC411",
      "Week 1. Introducing Data"
    ]
  },
  {
    "objectID": "PSYC411/part1/Week1.html#practical-materials",
    "href": "PSYC411/part1/Week1.html#practical-materials",
    "title": "Week 1. Introducing Data",
    "section": "1.4 Practical Materials",
    "text": "1.4 Practical Materials\n\n1.4.1 Workbook\nIn your group (or on your own until you’ve formed a group), work through this workbook, note any problems and questions you have, and come prepared to the online practical class to go through the tasks and ask your questions.\nIf you’ve done statistics using R-studio before then Parts 1 and 2 will be just revision for you. In which case, Part 3 is where you can focus your work.\nPart 1 of this workbook reproduces what you saw in the week 1 part 3 lecture.\nPart 2 gives you some more exercises in using R studio for finding means, standard deviations, z scores, and drawing histograms.\nPart 3 provides some more extended tasks you can do to practise exploring what R -studio can do and develop your skills further. If you are new to R-studio then parts 1 and 2 cover what you need to know, and Part 3 contains some more extending, optional exercises.\n\n1.4.1.1 Part One: repeat the steps from lecture 1 part 3\n\nTask One: Open Rstudio\n\nStartup Rstudio\n\nTo log in to the R server, first make sure that you have the VPN switched on, or you will need to be connected to the university network (Eduroam). To set up the VPN, follow ISS instructions here or connecting to Eduroam here.\nWhen you are connected, navigate to https://psy-rstudio.lancaster.ac.uk, where you will be shown a login screen that looks like the below. Click the option that says “Sign in with SAML”.\n\nThis will take you through to the University login screen, where you should enter your username (e.g. ivorym) and then your university password. This will then redirect you to the R server where you can start using RStudio!\n\n\n\n\n\n\n\n\nNote\n\n\n\nIf you have already logged in through the university login, then you may not see the username/password screen. When you click login, you will be redirected straight to RStudio. This is because the server shares the login information securely across the university.\n\n\n\nWhat does RStudio look like?\nWhen RStudio starts, it will look something like this: \nRStudio has three panels or windows: there are tabs for Console (taking up the left hand side), Environment (and History top right), Current file (bottom right). You will also see a 4th window for a script or set of commands you develop, also (on the left hand side).\n\n\n\nTask Two: using the console\n\n\n\n\n\n\nTip\n\n\n\nText that is highlighted with a grey background denotes code, rather than typical prose. Code is different to other forms of writing, such as essays, because the syntax, order and words need to be quite specific. For some longer chunks of code, as you will see below, they are formatted slightly differently.\n\n\n\nIn the “console” part of the R window, next to the &gt;, type 10 + 30. Press return.\n\n\n10 + 30                        \n\n\n\n\n\n\n\nTip\n\n\n\nIf you hover your mouse over the box that includes the code snippet, a ‘copy to clipboard’ icon will appear in the top right corner of the box. Click that to copy the code. Now you can easily paste it into your script.\n\n\nIt should give you the answer 40.\n\nIn the console, type a &lt;- 40 and press Return.\n\n\na &lt;- 40                      \n\n\nNow type a and press return. It should give you the answer 40. a is called an object, think of it like a bucket that you can keep a number, or some numbers, or actually all kinds of stuff in.\nNow let’s look at a function, sqrt. sqrt is a function that takes the square root of whatever is inside the brackets. In the console, type sqrt(13). Press Return.\nNow find the square root of the object a by typing sqrt(a). Press return.\n\n\n\n\nTask Three: finding distributions\n\nMake a new object b, and put the following list of children’s attachment scores into it\n\n\nb &lt;- c( 4, 1, 5, 3, 8, 2, 2, 6, 8, 5, 4, 1, 6, 5, 4, 5, 7, 9, 10, 1, 1, 3, 5, 4, 6, 4, 8, 6, 5, 5, 7, 8, 9, 8, 8, 2, 1, 4, 3, 2, 5, 1, 5, 6, 8, 6, 7, 2, 7)\n\n\nCheck it works by typing b, press return.\nFind the mean of these numbers by typing mean(b).\nFind the median of these numbers by typing median(b).\nFind the standard deviation of these numbers by typing sd(b).\nDraw a histogram of these numbers by typing hist(b).\n\n\n\n\nTask Four: z scores\n\nMake a new object b_z and assign to it the z scores of the values from b:\n\n\nb_z &lt;- scale(b)\n\n\nCheck that it worked by typing b_z.\nDraw a histogram of b_z by typing hist(b_z).\n\n\n\n\n1.4.1.2 Part Two: extra practice\n\nTask Five: investigating distributions\n\nLet’s make three new objects, with the marks from three people’s university masters courses. They are called annie, saj, and carrie and they took 10 courses each. We use the special notation c() to indicate a list, each number in the list is separated by a comma. Type the following into the console:\n\n\nannie &lt;- c(55, 95, 85, 65, 65, 85, 65, 95, 65, 75)\nsaj &lt;- c(65, 85, 95, 75, 65, 55, 55, 75, 95, 85)\ncarrie &lt;- c(75, 65, 95, 95, 55, 85, 75, 55, 95, 55)\n\n\nWho has the highest average (mean) score for their course?\n\n\n\n\n\n\n\nHint\n\n\n\n\n\nuse the mean() function\n\n\n\n\n\nWho has the most variable scores for their course?\n\n\n\n\n\n\n\nHint\n\n\n\n\n\nuse the sd() function\n\n\n\n\n\nWhat is the median score for each student?. What does this mean about the distribution of each students’ scores? Use the function hist() to draw the distributions to help you see.\n\n\n\n\n\n\n\nHint\n\n\n\n\n\nyou can use the summary() function, or the median() function\n\n\n\n\n\n\nTask Six: standardised scores: Z scores\n\nMake a new object called annie_z and use the function scale to convert annie’s scores to z-scores: in the console type:\n\n\nannie_z &lt;- scale(annie)\n\n\nYou can have a look at the standardised scores of annie, by just typing annie_z. To what did annie’s highest initial score of 95 convert to?\n\n\n\nWhat is the mean and standard deviation of annie_z’s standardised scores?\n\n\n\nDraw a histogram of annie’s standardised scores, in the console type hist(annie_z). What is the peak frequency value?\n\n\n\nBonus extra: If you want to find out the proportion of scores lower than a particular score you can do it like this in R-studio: pnorm(x) where x is the z-score you’re interested in. What is the proportion of scores lower than annie’s highest grade score?\n\n\n\n\n\n1.4.1.3 Part Three: Extras\nIf you’ve whizzed through the previous tasks, then you can move on to the following activities to explore further the functionality of R studio.\n\nTask Seven: Exploring operators.\nSo far, we’ve just looked at + as an operator. Go to this page: https://www.statmethods.net/management/operators.html\n\nIn the console, assign the object d to be 100 multiplied by 246.\nIn the console, assign the object e to be 84 divided by 32.1.\nAssign the variable f to 8 to the power of 4 (in R this is called exponentiation).\nWhat is the result of d added to e all divided by f\n\n\n\n\nTask Eight: Exploring functions\nSo far, we’ve just looked at the square root function sqrt(). Go to this page: https://www.statmethods.net/management/functions.html\n\nWhat is the result of abs(-5.3)? What does the abs function do?\n\n\n\nUsing the seq() function, generate a sequence of numbers from 0 to 30 in intervals of 3.\nAssign the sequence generated in step 28 to a new object. Now compute the mean of the sequence of numbers. (remember that objects can be a single number, or a sequence of numbers (called an array or a vector) or anything you want to put into it – remember, think of objects as buckets).\n\n\n\n\n\n\n\nStuck? Here’s the solution\n\n\n\n\n\nTry out the following code, pay special attention to how the sentences above “convert” into R code.\n\nsequence &lt;- seq(0,30, 3)\nmean(sequence)\n\n\n\n\n\nAssign the sequence generated in 31 to a new object. Now compute the mean of the sequence of numbers. (remember that objects can be a single number, or a sequence of numbers (called an array or a vector) or anything you want to put into it – remember, think of objects as buckets).\n\n\n\n\nTask Nine: Exploring others’ data\nHave a look at this article: Scullin, M. K., Gao, C., & Fillmore, P. (2021). Bedtime music, involuntary musical imagery, and sleep. Psychological Science, 32(7), 985-997. https://journals.sagepub.com/doi/10.1177/0956797621989724\nAbstract Many people listen to music for hours every day, often near bedtime. We investigated whether music listening affects sleep, focusing on a rarely explored mechanism: involuntary musical imagery (earworms). In Study 1 (N = 199, mean age = 35.9 years), individuals who frequently listen to music reported persistent nighttime earworms, which were associated with worse sleep quality. In Study 2 (N = 50, mean age = 21.2 years), we randomly assigned each participant to listen to lyrical or instrumental-only versions of popular songs before bed in a laboratory, discovering that instrumental music increased the incidence of nighttime earworms and worsened polysomnography-measured sleep quality. In both studies, earworms were experienced during awakenings, suggesting that the sleeping brain continues to process musical melodies. Study 3 substantiated this possibility by showing a significant increase in frontal slow oscillation activity, a marker of sleep-dependent memory consolidation. Thus, some types of music can disrupt nighttime sleep by inducing long-lasting earworms that are perpetuated by spontaneous memory-reactivation processes.\nThe data from the study is available on this osf website. The data we will look at is from the first study, the data set called “Earworm_MTurk_OSF.sav” on the osf site. These data are saved in spss format, which is not great for R-studio. We can still read it in, though, using a function called spss.get()\n\nBrowse the paper to see what it is about. Focus on Study 1.\nFrom the osf website download the data file: Earworm_MTurk_OSF.sav, and also download the codebook file: Earworm_MTurk_Codebook.xlsx. The codebook tells you what each of the measures are in the data file.\nLoad the data into R-studio: in the bottom right panel of R-studio, click on Upload, and browse to the Earworm_MTurk_OSF.sav file. It should then appear in the list of files in that bottom right panel.\nThat step means we can access the data, but it isn’t yet loaded into R-studio.\n\nSo, next load the data file into R-studio so we can work on it. You might have noticed that the data file is in SPSS format (that’s what the .sav ending to the file means). But, we can still load that in to R-studio.\nTo do that first, load the library Hmisc: library(Hmisc)\n\nlibrary(Hmisc)\n\n\nThen, use the function spss.get():\n\n\ndat &lt;- spss.get(\"Earworm_MTurk_OSF.sav\")\n\n\nThat should have made you a new object in R-studio called “dat” which contains the data from the study.\nNext, we can have a look at the data. Here are a few questions to get you going:\n\n\nHow many male, how many female participants?\n\n\n\nHow many people never have earworms in the middle of the night?\n\n\n\nFor the Stanford Sleepiness Scale, how many participants felt “Somewhat foggy, let down”?\n\n\n\nWhat was the mean, SD and range of age of the participants? Does your calculation of mean age correspond to that given in the paper?\n\n\n\nCan you work out the mean age of the male and female participants separately?\n\n\n\nExplore the data, see if you can remember tasks for separating different subgroups, graphing relations, comparing groups.\n\n\n\n\n\n\n1.4.2 Data\n(There are no data that you need for today’s practical, other than the link to the data for the earworm study, but when there are data sets you need, you will find them in this data section.)\n\n\n1.4.3 Answers\nThe answers to the workbook will appear below each question in the workbook, above, after the practical has finished, so you can check your answers.\nIt’s really important for your learning that you have a go first of all at the workbook before looking at the answers.",
    "crumbs": [
      "Home",
      "PSYC411",
      "Week 1. Introducing Data"
    ]
  },
  {
    "objectID": "PSYC411/part1/Week1.html#extras",
    "href": "PSYC411/part1/Week1.html#extras",
    "title": "Week 1. Introducing Data",
    "section": "1.5 Extras",
    "text": "1.5 Extras\nOptionally, watch the lecture by Tim Harford on the importance of understanding statistics. Note this video is hosted on facebook.",
    "crumbs": [
      "Home",
      "PSYC411",
      "Week 1. Introducing Data"
    ]
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Statistics for Psychologists",
    "section": "",
    "text": "Welcome\n\nWelcome to analysing and interpreting data for Masters students. For Term 1, please click on PSYC411 button below. For Term 2, please click on the PSYC412 button.\n\n\n  \n    \n\n    \n      PSYC411\n    \n    \n      PSYC412"
  },
  {
    "objectID": "PSYC411/index.html",
    "href": "PSYC411/index.html",
    "title": "Analysing and Interpreting Psychological Data I",
    "section": "",
    "text": "Welcome\nWelcome to this module PSYC411! Very glad to have you here!!\nRob Davies  and Padraic Monaghan  are the lecturers on this module.\nWe are looking forward to meeting you!\nThis module is designed for students who have never done data analysis or statistics before, as well as those who have background in this.\nWe have set up the module so that there are different exercises depending on your background.\n\nFor those who are new to data analysis and statistics, there is a week-by-week step-by-step guide to all you need to know to become a masters-level expert in interpreting and analysing psychological data.\nFor those of you who have already used our software (R-studio) for analysis before, after revising the foundations of what you need to know you can move on quickly to the extra explorative exercises where you can hone and broaden your skills.\n\n\n\nSteps to get ready\nHere are the steps to go through before the module begins, to help you prepare for the course:\nFirst: Watch this first video which is a chat between Rob Davies and Padraic Monaghan giving you a bit of an insight into what we’d like you to take from this module and what our philosophy is for teaching.\n\nSecond: Watch this welcome video (part 1) to give you an outline of how this module works:\n\nThird: Then watch this welcome video (part 2) on how to access the software for this module. Basically, what you need to do is in a web browser go to: http://psy-rstudio.lancaster.ac.uk and login with your university account name, and your university account password:\n\nNote that you can only access this website from on campus, or via the University’s VPN. For information on connecting to the VPN, see here: ISS help for VPN\n\n\nNext steps\nNext step is to go to the Week 1 materials, once they are released. We aim to release materials for the following week by Thursday of the previous week. You can navigate to the relevant week via the top left corner of the webpage.\n\n\nCourse Contacts\n\n\n\n\nEmail Address\n\n\n\n\nPadraic Monaghan\np.monaghan at lancaster dot ac dot uk\n\n\nRob Davies\nr.davies at lancaster dot ac dot uk\n\n\n\n\n\n\n\n\n\n\n\n Back to top"
  },
  {
    "objectID": "PSYC411/part1/Week2.html",
    "href": "PSYC411/part1/Week2.html",
    "title": "Week 2. Manipulating data",
    "section": "",
    "text": "Material for week 2 will be released after week 1 practical.",
    "crumbs": [
      "Home",
      "PSYC411",
      "Week 2. Manipulating data"
    ]
  },
  {
    "objectID": "PSYC411/part1/Week2.html#overview",
    "href": "PSYC411/part1/Week2.html#overview",
    "title": "Week 2. Manipulating data",
    "section": "2.1 Overview",
    "text": "2.1 Overview\nThis week, there are three mini lectures, and then a practical workbook to get you going with R-studio. Before the practical on Tuesday, please try to work through the practical workbook in your group.\nBring your questions (and/or answers) to the practical.",
    "crumbs": [
      "Home",
      "PSYC411",
      "Week 2. Manipulating data"
    ]
  },
  {
    "objectID": "PSYC411/part1/Week2.html#learning-goals",
    "href": "PSYC411/part1/Week2.html#learning-goals",
    "title": "Week 2. Manipulating data",
    "section": "2.2 Learning Goals",
    "text": "2.2 Learning Goals\nBy the end of Week 2, you should be able to:\n\nUnderstand the importance of open data in psychology\nUnderstand different types of data and how best to represent them\nUnderstand bar graphs, scatter plots, and interpret patterns in these graphs\nOpen data sets in R-studio and manipulate those data\nUse R-studio to make simple graphs",
    "crumbs": [
      "Home",
      "PSYC411",
      "Week 2. Manipulating data"
    ]
  },
  {
    "objectID": "PSYC411/part1/Week2.html#lectures",
    "href": "PSYC411/part1/Week2.html#lectures",
    "title": "Week 2. Manipulating data",
    "section": "2.3 Lectures",
    "text": "2.3 Lectures\nWatch Lecture week2 part1.\n\nWatch Lecture week2 part2\n\nWatch Lecture week2 part3\n\nTake the quiz on the lecture material (not assessed).\nDownload the lecture slides for: part 1, part 2, and part 3",
    "crumbs": [
      "Home",
      "PSYC411",
      "Week 2. Manipulating data"
    ]
  },
  {
    "objectID": "PSYC411/part1/Week2.html#practical-materials",
    "href": "PSYC411/part1/Week2.html#practical-materials",
    "title": "Week 2. Manipulating data",
    "section": "2.4 Practical Materials",
    "text": "2.4 Practical Materials\n\n2.4.1 Workbook\nIn your group (or on your own until you’ve formed a group), work through this workbook, note any problems and questions you have, and come prepared to the online practical class to go through the tasks and ask your questions.\nIf you’ve done statistics using R-studio before then Parts 1 and 2 will be again largely revision for you. In this case, Part 3 is where you can focus your work.\nPart 1 of this workbook reproduces what you saw in the week 2 part 3 lecture.\nPart 2 gives you some more exercises in using R studio to revise last week’s material see this article for the psychology behind learning and memory effects of “spacing”.\nPart 3 provides you with more practice at looking at others’ data and manipulating it.\nPart 4 provides some more advanced methods for data manipulation.\nPart 5 looks at different ways that data is stored, and how to adjust that.\nPart 6 provides some extended extra practice in finding and investigating datasets.\nIf you have used R-studio before, then Part 6 will be where you will be developing some new advanced skills.\n\n2.4.1.1 Part One: repeat the steps from lecture 2 part 3\n\nTask Zero: making and opening an R script file\n\nOpen up the R server at https://psy-rstudio.lancaster.ac.uk\nIn R studio, at the File menu, select New File, then R script.\nNow, we can put in our favourite sum to check it’s working.\nAt the top of the R script window type:\n\n\n10.5 + 7                        \n\nWith the cursor on the same line as the sum click on the Run button.\nIn the console, you should see the sum being run, and the answer produced.\n\nSave the R script.\n\nFirst of all, you can make a Directory/Folder to save the R scripts in to.\nYour file structure can be anything you like, but here’s how I organised it: At the bottom right panel of the R-studio window, click on Folder. Add a new Folder, call it, say PSYC411.\nClick on the PSYC411 Folder, and then make another new Folder, called, say “Week2”.\n\nThen, you can save this week’s workbook into the Week2 folder:\n\nClick on the Save icon just above the R script window, browse to the Folder where you want to save the script (e.g., PSYC411/Week2), then name the R script file (e.g., workbook_week2.r) and Save.\nThe .r subscript indicates to R studio that this is an R script file.\n\nClose the R script, by clicking on the little x next to the R script filename just above the R script window.\nNow open it again. In the R studio window File menu, select Open File, and browse to where you saved your R script file and open it.\nTo make it easier to save and open files we can set what is called the “working directory” for R studio. Click “Session” in the menu at the top of the R studio screen, select “Working directory”, then select “Choose directory”.\nBrowse to the Folder where you are going to save your PSYC411 R studio files (for me this is Documents/PSYC411), and click Open.\nOver on the right lower panel, you should now see all the files that are in this Folder - including psyc411_week2.r\n\n\n\nTask One: open and check Practical week1 workbook script file\n\nLast week, we didn’t save a script (as we were just using the console for R studio). But here’s one I prepared earlier… Download the week 1 script file here. This also has the answers (but you can check last week’s answers via the main Week 1 page already too).\n\nThis has now downloaded the file on to your local computer. You now need to make it available in the psy-rstudio system. To do this, we have to “Upload” the file.\nIn the bottom right panel of R studio, click “Upload”.\nFor the Target directory, select the Folder in R-studio that you’d like to upload the file to (e.g., PSYC411/Week1 - maybe first of all you’ll need to make the Folder).\nThen Browse to the file that is on your local computer, and click OK.\nYou should see it in the Files in the bottom right panel on R-studio.\n\nNow you can open psyc411_week1_workbook_answers.r in R-studio (either through File &gt; Open File, at the top left panel, or just by double-clicking it in the Files in the bottom right panel). You can now look through this R script, check your commands and answers to the tasks from last week.\n\n\n\nTask Two: Opening a data file\n\nMake sure your script file psyc411_week2.r in R studio.\nIt’s generally a good idea to refresh and clear out R studio when you start a new session, so add this line to the beginning of your R studio file:\n\n\nrm(list=ls())                    \n\n\nNext we are going to open a new data file.\n\nDownload the file PSYC411-shipley-scores-anonymous-17_18.csv\n\n\n\n\n\n\nTip\n\n\n\nDO NOT OPEN THIS FILE ON YOUR COMPUTER – IF YOU DO, DELETE IT THEN DOWNLOAD IT AGAIN - THE REASON FOR THIS IS THAT IT CHANGES THE FILE FORMAT AND THEN WON’T OPEN PROPERLY IN R STUDIO.\n\n\nThen, Upload the data file into R-Studio, and put it in PSYC411/Week2 Folder for instance.\nEach row is one person’s data, and each column is a measure taken from the person. Columns are separated by commas, which is what the “csv” refers to” comma-separated values.\n\nIn R studio, we open csv files using a function called read_csv() which comes from a set of functions that are stored in a library called “tidyverse”, we can install these functions by putting library(tidyverse) at the very top of our R script.\n\nType this command in the script file and then run it:\n\nlibrary(tidyverse)\n\n\n\n\n\n\n\nWant to know more about library()?\n\n\n\n\n\nR comes with certain functions pre-installed, such as mean(), but part of the charm of R is that we can install different functions that give us the opportunity to do almost anything! Collections of functions are called packages, and collections of packages are called libraries, but for the purpose of practicality, we typically refer to them interchangably. We install libraries using library() and enter the name of the library in the brackets.\n\n\n\n\nThen type this command in the script file and run it:\n\n\ndat &lt;- read_csv(\"PSYC411-shipley-scores-anonymous-17_18.csv\")\n\nRemember the dat &lt;- notation, which means we put the data into an object called “dat”\n\nIf all went well, we can then look at the data, using the function View: In the script file type:\n\n\nView(dat)\n\nand run it. It should open a spreadsheet where we can see the data.\n\nHave a good look around the data to see if you can make sense of it. For now, we will just focus on two variables from the data: subject_ID which is the participants’ anonymised number, and Gent_1_score, which is the participants’ score on the Gent vocabulary test, the first time they had a go (that’s what the 1 stands for). We can just pick out the columns of data that we want using the select function.\n\nselect is in the library called “tidyverse”, so we don’t need to load this in again because we already have.\n\nsummarydat &lt;- select(dat, subject_ID, Gent_1_score)\n\n\nFinally, let’s just have a quick look at these data. In the script file type:\n\n\nhist(summarydat$Gent_1_score)\n\nand run it.\n\nThis will draw a histogram of the Gent vocabulary scores. summarydat$Gent_1_score means that we look at the Gent_1_score values from the summarydat data – the $ indicates that this is one of the measures from the data. What kind of pattern does the histogram show?\n\n\n\n\n\n2.4.1.2 Part Two: Revision from last week\n\nSave your R script. Now, without looking at your notes, make a new object called “iknow”, and assign this list of numbers to it: 126, 76, 98, 124, 91, 88, 99, 115, 80, 113, 90, 92, 97, 134, 110, 92, 92, 87, 135, 115\n\n\n\n\n\n\n\nHint\n\n\n\n\n\nuse the iknow &lt;- c(number1, number2, …) notation\n\n\n\n\nRemember to type these commands in the R script window. Next, get R-studio to give you the mean and standard deviation of this list of numbers.\nDraw a histogram of the iknow data.\n\n\n\n\n2.4.1.3 Part Three: More practise at opening files and manipulating data\n\nTask Three: Loading data into R-studio\n\nDownload the data file called ahicesd.csv and Upload them into your directory in R studio: “PSYC411/week2”. Now do the same for participantinfo.csv.\n\nThese data come from this study: Woodworth, R.J., O’Brien-Malone, A., Diamond, M.R. and Schüz, B., 2018. Data from, Web-based Positive Psychology Interventions: A Reexamination of Effectiveness. Journal of Open Psychology Data, 6(1).\nA brief description of the study is as follows: In our study we attempted a partial replication of the study of Seligman, Steen, Park, and Peterson (2005) which had suggested that the web-based delivery of positive psychology exercises could, as the consequence of containing specific, powerful therapeutic ingredients, effect greater increases in happiness and greater reductions in depression than could a placebo control. Participants (n=295) were randomly allocated to one of four intervention groups referred to, in accordance with the terminology in Seligman et al. (2005) as 1: Using Signature Strengths; 2: Three Good Things; 3: Gratitude Visit; 4: Early Memories (placebo control). At the commencement of the study, participants provided basic demongraphic information (age, sex, education, income) in addition to completing a pretest on the Authentic Happiness Inventory (AHI) and the Center for Epidemiologic Studies-Depression (CES-D) scale. Participants were asked to complete intervention-related activities during the week following the pretest. Futher measurements were then made on the AHI and CESD immediately after the intervention period (‘posttest’) and then 1 month after the posttest (day 38), 3 months after the posttest (day 98), and 6 months after the posttest (day 189). Participants were not able to to complete a follow-up questionnaire prior to the time that it was due but might have completed at either at the time that it was due, or later. We recorded the date and time at which follow-up questionnaires were completed.\n\nNext, load the data into R-studio.\n\nThe first file is data from participants’ self-ratings of happiness and depression.\nThe second contains demographic information about the participants. Type this in your R script:\n\ndat &lt;- read_csv(\"ahicesd.csv\")\npinfo &lt;- read_csv(\"participantinfo.csv\")\n`, run this command (type Ctrl-Enter), then type `pinfo &lt;- read_csv(\"participantinfo.csv\")`, and run that. \n\nThis has made two new objects – one called “dat” which contains the experimental data, and one called “pinfo” which contains the demographic information.\n\n\nTask Four: Examining and manipulating data\n\nLet’s have a look at the data now.\n\n\nView(dat)\n`in the source and Run it in the console, and you should see the data appear above the console window.\n\nHave a good long hard look at it.\n\nThe data contains: id which is the participant number; occasion which is whether this is the first (0), second (1), up to sixth (5) time they filled in the questionnaires; intervention is which intervention they took part in with respect to attempting to promote their mood; ahi01-ahi24 are the 24 items on the AHI happiness scale; cesd01-cesd20 are the 20 items on the CESD depression scale. Way over on the right are the total scores on the AHI and the CESD questionnaires.\nNow, view the pinfo data. How can you look at it?\n\n\n\nLooking at the data replaced the source window, but the source is still there. Just above the View panel you should see a tab named psyc411_week2.r, click on that to get your source panel back. It will have a star/asterisk after the file name if it is unsaved. Remember it’s a good idea to regularly save your source file so you don’t lose work.\nNow, we are going to join together the two files. Type this:\n\n\nall_dat &lt;- inner_join(x = dat, y = pinfo, by = c('id', 'intervention'))\n\nQuestion: what does the c(“id”, “intervention”) bit mean?\n\nWe’ve now made a new data set called “all_dat”. The “x = dat” bit is the name of the first datafile we want to join, the “y = pinfo” is the name of the second datafile we want to join, the “by = ‘id’, ‘intervention’” bit is the names of variables that the two datasets have in common.\n\nHow would you join two data sets one called “data1” the other called “data2” together if they both have the variable “participantname” in common?\n\n\n\nNow we just want to keep a few of the variables – we’re not interested in the individual questionnaire items. So, let’s select the variables we want to keep:\n\n\nsummarydata &lt;- select(all_dat, ahiTotal, cesdTotal, sex, age, educ, income, occasion, intervention)\n\nWhere “all_dat” is the name of the object to take data from, and “ahiTotal, cesdTotal, sex, age, educ, income, occasion, intervention” are all the variables we want to keep.\n\nHave a look at the summarydata in the View. How do you do that?\n\n\n\n\nTask Five: Investigate data\n\nThe next task is to have a closer look at the distributions of the data. Let’s focus on the age of participants. To investigate one column of data from a dataset, you have to refer to it using the “$” symbol. So, to investigate the “age” column from the “summarydata” dataset, you would look at summarydata$age. Draw a histogram (bar graph) of the distribution of age in the participant sample.\n\n\n\nNow, let’s look at how the AHI and the CESD scores relate. To gain an impression of how two variables relate we can draw a scatter graph.\n\n\nplot(summarydata$ahiTotal, summarydata$cesdTotal)\n\nWhat does the “$” do in this command? What relationship do you find between these two variables?\n\n\nNow make sure you save psyc411_week2.r that contains all these commands that you ran. Close R studio, and Open R studio and make sure it’s saved all your work.\nThe list of commands is extremely useful for making science open and accessible to other researchers. It’s more and more common for psychology articles to make the R source files available so other researchers can reproduce the data manipulations and analyses used in the paper precisely.\n\n\n\n\n4.2.1.4 Part Four: More (advanced) data manipulation\n\nFor reading in more types of data, you can use commands other than read_csv(). Have a look at https://support.rstudio.com/hc/en-us/articles/218611977-Importing-Data-with-RStudio and have a go at loading in excel files or text files with various formats into R studio, remember last week, we also loaded in spss .sav files using the spss.get() function in the Hmisc library.\n\nAnother way to load in spss .sav files is to use the library called haven and the function read_sav which then works quite similarly to the read_csv file.\nNote that using lots of different resources online is one of the points of using R-studio – everything is open and shared. It isn’t cheating - it’s what everyone who uses R-studio does, it’s what I did when I was checking some of the commands in this module - so do use google (or baidu, or any search engine) to explore other commands, and to get hints if you ever get stuck.\n\nWhat if the datafiles you wanted to combine together had different names for participants – maybe, for instance, in datafile “dataone” it’s called “id” and in “datatwo” it’s called “participant”. You can do this by specifying how variables in different datasets relate to each other.\n\nTake a look at the help information for inner_join by typing ?inner_join then in the help pane on the right, scroll down to find the section titled “Arguments”, and read what it has to say about the argument “by”. See if you can understand how to join these files together. The examples at the bottom of the help section may be useful too.\n\n\n\n\n\n\nHint\n\n\n\n\n\nThe important help information is: “To join by different variables on x and y, use a named vector. For example, by = c(”a” = “b”) will match x$a to y$b.”\n\ndata_full &lt;- inner_join(x = dataone, y = datatwo, by = c(\"id\" = \"participant\"))\n\n\n\n\n\nIn the data set from Woodworth et al., we might want to just look at the pretests. We can use a function called filter to pull out just some of the rows.\n\n\nsummarydata_occasion0 &lt;- filter(summarydata, occasion == 0)\n\nThis pulls out just the first occasion of testing (the pretest).\nHow would you pull out the second occasion of testing?\n\n\nHow would you pull out just those participants who had the first intervention from the summarydata data?\n\n\n\nBack to the data set with just occasion == 0 selected. Now plot the relationship between the AHI and CESD scores at this pretest. What is the pattern now?\n\n\n\nHow about just the participants who had intervention 1. What is the relationship between their scores on the AHI and CESD in the first test?\n\n\n\n\n4.1.3.5 Part Five: Different ways in which data are stored: long and wide data format\nWhen we look at other people’s data sets there are two generic ways in which they can be presented. The first is called “wide format”, and this is when several measures are presented on a single row in the data. This is the format of the data in the vocabulary scores: psyc411-shipley-scores-anonymous-17_18.csv, where there are three vocabulary tests each in different columns. The other format is called “long format”, and this is where each observation is on a different line – and if there is more than one observation from the same subject then that subject has multiple lines in the data. There are some functions in the tidyverse library that helps us convert from wide to long and long to wide. This part practises these conversions.\n\nTask Six: Wide to long format conversion\n\nLet’s go back to the psyc411-shipley-scores-anonymous-17_18.csv data. This should still be in the object called “dat”. If it’s not, then load the data again into dat, using the read_csv() function.\nMake sure the library(tidyverse) is loaded, if not, run the command library(tidyverse).\nThe aim here is to convert the data so that each Gent vocabulary score is on a separate line, we use the pivot_longer function for this. First we specify what the new object should be (datlong), then we say where the old data is (dat), then we make a new variable to keep the names of the tests (names_to = “test”), then we make a new variable to keep the scores from the tests (values_to = “vocab”), then we specify the list of old variables to combine into the new scores variable (c(“Gent_1_score”, “Gent_2_score”) ) – remember lists are written as c(). So, run this command:\n\n\ndatlong &lt;- pivot_longer(dat, names_to = \"test\", values_to = \"vocab\", cols = c(\"Gent_1_score\", \"Gent_2_score\")) \n\n\nHave a look at the new object datlong that results: View(datlong). This function pivot_longer has taken as input the data in dat, it has created a new variable called “test” which reports whether it is the Gent_1_score or the Gent_2_score that is the measurement, and a new variable called “vocab” where the actual scores are listed. Then, the following list of variables let’s the function pivot_longer know which variables from the object dat we are converting (or lengthening). It also includes all the other variables, but unconverted. How many rows of data are there now corresponding to data from subject_ID number 1?\n\n\n\nLet’s tidy things up so we only have subject_ID, and the Gent vocabulary scores by using select:\n\n\ndatlongsummary &lt;- select(datlong, subject_ID, test, vocab)\n\n\n\nTask Seven: Long to wide format conversion\n\nNow, we will have a go at converting from long to wide format. Let’s start with the datlongsummary object. We will convert this so that Gent_1_score and Gent_2_score are listed alongside each other – one row per person. The command for this is the reverse of pivot_longer, called pivot_wider. Run this command:\n\n\ndatwide &lt;- pivot_wider(datlongsummary, names_from = \"test\", values_from = \"vocab\")\n\nThis command takes the data from datlongsummary and puts the different measures reported in the variable test into different columns again, filling in the values from the variable vocab.\n\n\n\n4.1.3.6 Part Six: Extra practise finding and interpreting data sets\nThis part involves you exploring online psychology articles and finding an article which has made its data set available. More and more journals require data to be available when articles are published, an influential journal that has supported open science practices is Psychological Science. Go to the webpage of Psychological Science: https://journals.sagepub.com/home/pss. Browse the journal (you can view it on campus, off campus might be more difficult). Articles which have a dataset available have a “badge” indicating open data.\nIf data is made available, it is usually present as a “Supplemental Material” or via a link in the article (often data is stored on sites such as Open Science Framework (osf.io) or Figshare). For example, for this article:\nat the end of the article there is a note on how to access the data:\nYour task is to: download an article, download its data, and be able to describe what is in the data – i.e., what the rows and the columns in the data refer to. You can do this individually or as a group. At the next practical, you will talk one of the demonstrators through your description of the data.\nYou are free to explore the journal in its entirety to find an article that interests you, but some data sets can be really complicated to interpret. Some that you might begin with are as follows:\nvon Hippel, W., Ronay, R., Baker, E., Kjelsaas, K., & Murphy, S. C. (2016). Quick thinkers are smooth talkers: Mental speed facilitates charisma. Psychological Science, 27(1), 119-122. https://journals.sagepub.com/doi/full/10.1177/0956797615616255\ndata is available on osf.io (open science foundation) have a look in the Archive of OSF Storage for this article, under “Clean Data”, “Study 1 data long format.csv”. See if you can figure that one out.\nThere are two things to be aware of with data.\n\nFirst, real life data is usually not complete – it contains missing values. The usual way to indicate missing values is “NA” in R. But if the data set contains missing values indicated in a different way, then you have to specify this when you input the data. So, if missing values are indicated by “999”, you have to do it like this:\n\nread_csv(\"file.csv\", na.strings=\"999\")\n\nwhere file.csv is the file you are inputting. If missing values are indicated by “na”, you have to do this:\n\nread_csv(\"file.csv\", na.strings=\"na\")\n\nif missing values are “.”, then like this:\n\nread_csv(\"file.csv\", na.strings=\".\")\n\nThe second thing you might need to know is how to input files other than comma separated files. For excel files, you need to do this: library(readxl), then you can use the command read_excel(\"file.xls\"), this should work for xls and xlsx files. For inputting data that is in text, but not separated by commas, have a look at the help for the read_csv() function: ?read_csv. Hint – you’ll be looking to change the sep option for the read_csv command.\n\n\nSee if you can find and load the data from one or both of these studies. Then have a go at exploring the data - can you recreate the numbers in the paper (e.g., age and number of participants, mean and sd of the main dependent variable?)\n\n\n\n\n2.4.2 Data\nHere are links to all the data referred to in this practical: PSYC411-shipley-scores-anonymous-17_18.csv\nahicesd.csv\nparticipantinfo.csv\n\n\n2.4.3 Answers\nThe answers to the workbook will appear below each question in the workbook, above, after the practical has finished, so you can check your answers.\nIt’s really important for your learning that you have a go first of all at the workbook before looking at the answers.\n\n\n2.5 Extras\n\nOptionally, watch Brian Nosek’s keynote at the 2018 British Psychological Society conference on the replicability crisis (note hosted on youtube).",
    "crumbs": [
      "Home",
      "PSYC411",
      "Week 2. Manipulating data"
    ]
  }
]