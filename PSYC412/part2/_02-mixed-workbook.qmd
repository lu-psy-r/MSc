---
title: Week 17. Workbook introduction to mixed-effects models
subtitle: Written by Rob Davies
order: 9
bibliography: references.bib
csl: psychological-bulletin.csl
---

# Week 17 Mixed-effects models workbook overview {#sec-mixed-effects-workbook-overview}

Welcome to your overview of the work we will do together in **Week 17**.

Many Psychologists conduct studies with **repeated-measures designs** where the experimenter presents a sample of multiple stimuli, for response, to each participant in a sample of multiple participants.
Studies with repeated-measures designs will produce data with a structure that requires the use of mixed-effects models.

We are going to learn about this kind of data, and build on the analysis methods we learned about in the [Conceptual introduction to multilevel data](../part2/01-multilevel.qmd#sec-intro-multilevel) and the [workbook introduction to multilevel data](../part2/01-multilevel-workbook.qmd#sec-multilevel-workbook-overview) . 

We use the same procedure we did for multilevel data but with **one significant change** which we shall explore and seek to understand in-depth.

## Targets {#sec-mixed-effects-workbook-targets}

Our learning objectives include the development of key concepts and skills.

1.  **concepts** -- how data can have multilevel structures and what this requires in models
2.  **skills** -- where skills comprise the capacity to:

- use visualization to examine observations within groups
- run linear models over all data and within each class
- use the `lmer()` function to fit models of multilevel data

We are just getting started this week. 
Our plan will be to build depth and breadth in understanding as we progress over the next few weeks.

## Learning resources {#sec-mixed-effects-workbook-resources}

You will see, next, the lectures we share to explain the concepts you will learn about, and the practical data analysis skills you will develop. Then you will see information about the practical materials you can use to build and practise your skills.

Every week, you will learn best if you *first* watch the lectures *then* do the practical exercises.

::: callout-tip
### Linked resources

To help your learning, you can read about the ideas and the practical coding required for analyses in the chapters I wrote for this course.

[The chapter: Conceptual introduction to multilevel data](../part2/01-multilevel.qmd#sec-intro-multilevel) 
:::

### Lectures {#sec-mixed-effects-workbook-lectures}

The lecture materials for this week are presented in three short parts.

Click on a link and your browser should open a tab showing the *Panopto* video for the lecture part.

1. Part 1 (17 minutes) **Multilevel data**: What do we mean when we talk about multilevel structured data and why it matters.

```{=html}
<iframe src="https://lancaster.cloud.panopto.eu/Panopto/Pages/Embed.aspx?id=66e89421-4491-4eb9-b1c8-acd4012a183d&autoplay=false&offerviewer=true&showtitle=true&showbrand=true&captions=false&interactivity=all" height="405" width="720" style="border: 1px solid #464646;" allowfullscreen allow="autoplay" aria-label="Panopto Embedded Video Player" aria-description="01-multilevel-1-of-3" ></iframe>
```

2. Part 2 (13 minutes): Getting started in learning, working with an example from education, children clustered in classes, analyzing data using linear models, seeing the differences between different classes.

```{=html}
<iframe src="https://lancaster.cloud.panopto.eu/Panopto/Pages/Embed.aspx?id=22361175-636b-424c-9e28-acd4012efd6f&autoplay=false&offerviewer=true&showtitle=true&showbrand=true&captions=false&interactivity=all" height="405" width="720" style="border: 1px solid #464646;" allowfullscreen allow="autoplay" aria-label="Panopto Embedded Video Player" aria-description="01-multilevel-2-of-3" ></iframe>
```

3. Part 3 (13 minutes): Doing multilevel models in practice, coding models using `lmer()`, a first look at analysis results.

```{=html}
<iframe src="https://lancaster.cloud.panopto.eu/Panopto/Pages/Embed.aspx?id=5942b084-457f-4687-aa3d-acd401332b44&autoplay=false&offerviewer=true&showtitle=true&showbrand=true&captions=false&interactivity=all" height="405" width="720" style="border: 1px solid #464646;" allowfullscreen allow="autoplay" aria-label="Panopto Embedded Video Player" aria-description="01-multilevel-3-of-3" ></iframe>
```

### Lecture slides {#sec-mixed-effects-workbook-slides}

::: callout-tip
## Download the lecture slides
The slides presented in the videos can be downloaded here:

- [402-week-17-LME-1.pdf](files/402-week-17-LME-1.pdf): high resolution .pdf, exactly as delivered [4 MB];
- [402-week-17-LME-1_1pp.pdf](files/402-week-17-LME-1_1pp.pdf): low resolution .pdf, printable version, one-slide-per-page [359 KB];
- [402-week-17-LME-1_6pp.pdf](files/402-week-17-LME-1_6pp.pdf): low resolution .pdf, printable version, six-slides-per-page [359 KB].

The high resolution version is the version delivered for the lecture recordings. Because the images are produced to be high resolution, the file size is quite big (4 MB) so, to make the slides easier to download, I produced low resolution versions: 1pp and 6pp. These should be easier to download and print out if that is what you want to do.
:::

### Practical materials: data and R-Studio {#sec-mixed-effects-workbook-practical}

We will be working with data taken from a study on education outcomes in Brazilian children, reported by @golino2014.

You can read more about these data in [Conceptual introduction to multilevel data](../part2/01-multilevel.qmd#sec-intro-multilevel).

::: callout-important
**Get the data**: get the data file and the .R script you can use to do the exercises that will support your learning.

- You can download the files folder for this chapter by clicking on the link [01-multilevel.zip](files/01-multilevel.zip).
:::

The practical materials folder includes:

- `BAFACALO_DATASET.RData`
-  `402-01-multilevel-workbook.R` the workbook you can use to do the practical exercises.

The data file is in the `.RData` format: `.RData` is R's own file format so the code you use to load and access the data for analysis is a bit simpler than you are used to, as we will see.

::: callout-important
You can access the sign-in page for [R-Studio Server here](https://psy-rstudio.lancaster.ac.uk/auth-sign-in?appUri=%2F)
:::

#### Practical materials guide {#sec-mixed-effects-workbook-practical-guide}

Here, our learning targets are:

- concepts: multilevel data and multilevel modeling
- skills: visualization -- examine overall and within-class trends
- skills: run linear models over all data -- and within each class
- skills: use the lmer() function to fit models of multilevel data

The aims of the practical work are to:

- Get practice running the code so that you can reproduce the figures and results from the lecture and in the book chapter.
- Exercise skills by varying code -- changing variables, changing options -- so that you can see how the code works.
- Use the opportunity to reflect on and evaluate results -- so that we can support growth in development of understanding of main ideas.

#### The practical exercises {#sec-mixed-effects-workbook-practical-workbook}

Now you will progress through a series of tasks, and challenges, to aid your learning.

::: callout-warning
We will work with the data file:

-   `AFACALO_DATASET.RData`
:::

We again split the steps into into parts, tasks and questions.

We are going to work through the following workflow steps: **each step is labelled as a practical part**.

1. Set-up
2. Load the data
3. Inspect the data
4. Visualize relationships
5. Analyze relationships using linear models
6. Visualize relationships for each class
7. Mixed-effects analysis
8. Optional exercises: extensions

In the following, we will guide you through the tasks and questions step by step.

::: callout-important
An answers version of the workbook will be provided after the practical class.
:::

#### Practical Part 1: Set-up

To begin, we set up our environment in R.

##### Practical Task 1 -- Run code to load relevant libraries

Use the `library()` function to make the functions we need available to you.

:::{.callout-tip collapse="true"}
## Code
```{r}
library(broom)
library(gridExtra)
library(lme4)
library(tidyverse)
```
:::

#### Practical Part 2: Load the data

##### Practical Task 2 -- Read in the data file we will be using

The data file is called:

- `BAFACALO_DATASET.RData`

Use the `load()` function to read the data files into R:

:::{.callout-tip collapse="true"}
## Code
```{r}
load("BAFACALO_DATASET.RData")
```
:::

Get summary statistics to inspect what you have got.

:::{.callout-tip collapse="true"}
## Code
```{r}
summary(BAFACALO_DATASET)
```
:::

#### Practical Part 3: Tidy the data

##### Practical Task 3 -- Tidy the data

Tidying the data involves a number of tasks, some essential and some things we do for our convenience.

We start by selecting the variables we want: 

- `class_number`, `participant_id`, `portuguese`, `english`, `math`, `physics`

:::{.callout-tip collapse="true"}
## Hint
- We use the `{dplyr}` function `select()` to pick just the variables needed.
- We create a new data-set (call it what you like), from the original, to hold just the selection of variables we want to use in the analysis steps, following.
:::

:::{.callout-tip collapse="true"}
## Code
```{r}
brazil <- BAFACALO_DATASET %>%
                              select(
                              class_number, participant_id,
                              portuguese, english, math, physics
                              )
```
:::

>**Pract.Q.1.** Do you know what you are doing with `select()`? Can you select a different set of variables?

<!-- > Pract.A.1. You can exercise your skill by checking that you can view the `BAFACALO_DATASET` and select any variable you like. Be careful and make sure you go back to select the variables shown in the given code chunk: we will need them later. -->

##### Practical Task 4 -- Take missing values out of the brazil data

There are several rows in the data-set with missing values.
You need to remove these from the data before you get started with any calculations.

:::{.callout-tip collapse="true"}
## Code
```{r}
brazil <- na.omit(brazil)
```
:::

What have you got?

You should always check the results of a tidying operation, to make sure that what you have got matches what you expected to get.

:::{.callout-tip collapse="true"}
## Code
```{r}
summary(brazil)
```
:::

>**Pract.Q.2.** Do you see the difference between the summary of the brazil data shown before and after you run `na.omit()`? What is it?

<!-- > Pract.A.2. You should see that `NA`s are listed in some columns in the data before but not after you run `na.omit()`. -->

##### Practical Task 5 -- Get R to treat a variable as a type object of the kind required -- using the `as.numeric()` or `as.factor()` functions

:::{.callout-tip collapse="true"}
## Code
```{r}
brazil$portuguese <- as.numeric(brazil$portuguese)
brazil$english <- as.numeric(brazil$english)
brazil$math <- as.numeric(brazil$math)
brazil$physics <- as.numeric(brazil$physics)

brazil$class_number <- as.factor(brazil$class_number)
brazil$participant_id <- as.factor(brazil$participant_id)
```
:::

What have you got?

:::{.callout-tip collapse="true"}
## Code
```{r}
summary(brazil)
```
:::

>**Pract.Q.3.** Do you see the difference between the summary of the brazil data shown before and after you run `as.numeric()` or `as.factor()` function lines? What is it?

<!-- > Pract.A.3. You should see that numeric variables like portuguese are listed with summary statistics like the mean after but not before you coerce the variables. -->

##### Practical Task 6 -- Exercise -- experiment with coercion

1. Test out variable type using the `is...()` function for some of the variables
2. Test out coercion -- and its results -- using the `as...()` function for some of the variables
3. Look at the results using `summary()`

#### Practical Part 4: Visualize the relationship

Here, we are interested in the relationship between school grades, for the sample of Brazilian children for whom we have data.

- What is the relationship between portuguese and english grades?

##### Practical Task 7 -- Visualize the relationship between portuguese and english grades using a scatterplot

This should be a revision exercise for you.

- Do you notice any changes in the way in which the plotting code is laid out?

:::{.callout-tip collapse="true"}
## Code
```{r}
brazil %>%
  ggplot(aes(x = portuguese, y = english)) +
  geom_point(colour = "black", size = 2.5, alpha = .5) +
  geom_smooth(method = "lm", size = 1.5, se = FALSE, colour = "red") +
  xlab("Portuguese") + ylab("English") + theme_bw() 
```
:::

##### Practical Task 8 -- Exercise -- edit plots

1. Change the x and y variables to math and physics
2. Change the theme from `theme_bw()` to something different
3. Change the appearance of the points, try different colour, shape, size

:::{.callout-tip collapse="true"}
## Hint
Use the ggplot reference documentation to help you make choices:

- <https://ggplot2.tidyverse.org/reference/>

You should be using webpages like the reference page often in your work.
:::

#### Practical Part 5: Visualize the relationship

We move next to analyzing the relationship between variation in grades in different subjects, across the children in our sample.

##### Practical Task 9 -- Analyze the relationship between english and portuguese grades in the brazil data

You should be able to reproduce the results shown in the slides and the book chapter.

:::{.callout-tip collapse="true"}
## Code
```{r}
summary(lm(english ~ portuguese, data = brazil))
```
:::

##### Practical Task 10 -- Exercise -- adapt the `lm()` code to do a different analysis

Change the outcome and predictor variables to math and physics.

:::{.callout-tip collapse="true"}
## Code
```{r}
summary(lm(physics ~ math, data = brazil))
```
:::

>**Pract.Q.4.** What is the estimated coefficient of the "effect" of math ability (grade) on physics grade?

<!-- > Pract.A.4. The summary shows that physics grades are on average 1.3 higher for unit increase in math grade. -->

>**Pract.Q.5.** Draw a scatterplot showing the relationship between math and physics grades. Does the trend you see in the plot reflect the coefficient you see in the linear model summary?

<!-- > Pract.A.5. The plot shows the positive association between math and physics grade also indicated by the estimated coefficient of the math effect. -->

:::{.callout-tip collapse="true"}
## Code
```{r}
brazil %>%
  ggplot(aes(x = math, y = physics)) +
  geom_point(colour = "black", size = 2.5, alpha = .5) +
  geom_smooth(method = "lm", size = 1.5, se = FALSE, colour = "red") +
  theme_bw() 
```
:::

>**Pract.Q.6.** How does the strength of the math-physics relationship compare with the english-portuguese relationship?

<!-- > Pract.A.6. Both the linear model and the plots indicate that the math-physics relationship is much stronger. -->

#### Practical Part 6: Visualize the relationship for each class

##### Practical Task 11 -- Plot the relationship between english and portuguese grades separately for each class using `facet_wrap()`

:::{.callout-tip collapse="true"}
## Code
```{r}
ggplot(data = brazil, aes(x = portuguese, y = english)) +
  geom_point(colour = "darkgrey") + 
  geom_smooth(method = "lm", se = FALSE, colour = "black") +
  xlab("Portuguese") + ylab("English") + theme_bw() +
  scale_x_continuous(breaks=c(25,50,75)) + scale_y_continuous(breaks=c(0,50,100)) +
  facet_wrap(~ class_number) 
```
:::

##### Practical Task 12 -- Exercises to practice your `facet_wrap()` skills

1. Change the x and y variables to math and physics and draw a facetted scatterplot again
2. Experiment with showing the differences between classes in a different way: instead of using `facet_wrap()`, in `aes()` add `colour = class_number`, and remove colour from `geom_point` and `geom_smooth`

:::{.callout-tip collapse="true"}
## Code
```{r}
ggplot(data = brazil, aes(x = math, y = physics)) +
  geom_point(colour = "darkgrey") + 
  geom_smooth(method = "lm", se = FALSE, colour = "black") +
  facet_wrap(~ class_number) 

ggplot(data = brazil, aes(x = math, y = physics, colour = class_number)) +
  geom_point() + geom_smooth(method = "lm", se = FALSE)
```
:::

>**Pract.Q.8.** Evaluate the consistency between classes of the relationship between math and physics grades: what do the plots show? how does this compare with what you see of the relationship between english and portuguese grades?

<!-- > Pract.A.8. The plots show that the relationship between math and physics is very consistent between classes, and more consistent than the relationship between english and portuguese grades appears to be. -->

#### Practical Part 7: Mixed-effects analysis

##### Practical Task 13 -- Run a linear mixed-effects analysis of the relationship between english and portuguese grades using `lmer()`

You should be able to replicate the results shown in the slides and the book chapter.

:::{.callout-tip collapse="true"}
## Code
```{r}
porto.lmer1 <- lmer(english ~ portuguese +
                      (portuguese + 1|class_number),
                      data = brazil)
summary(porto.lmer1)
```
:::

##### Practical Task 14 - Exercise mixed-effects model coding

1. Vary the random effects part of the model, while keeping this bit the same: `lmer(english ~ portuguese + ...)`
2. Change the random effect from `(portuguese + 1 | class_number)` to `(1 | class_number)`: what you are doing is asking R to ignore the differences in the slope of the effect of Portuguese grades.
3. Change the random effect from `(portuguese + 1 | class_number)` to `(portuguese + 0 | class_number)`: what you are doing is asking R to ignore the differences  in the intercept

:::{.callout-tip collapse="true"}
## Code
```{r}
porto.lmer1 <- lmer(english ~ portuguese +
                      (portuguese + 1|class_number),
                    data = brazil)
summary(porto.lmer1)

#

porto.lmer2 <- lmer(english ~ portuguese +
                      (1|class_number),
                    data = brazil)
summary(porto.lmer2)

#

porto.lmer3 <- lmer(english ~ portuguese +
                      (portuguese + 0|class_number),
                    data = brazil)
summary(porto.lmer3)
```
:::

>**Pract.Q.9.** Compare the results of the different versions of the model. Can you identify where the results are different?

<!-- > Pract.A.9. It can be seen that Rhe estimated effect of portuguese varies between the models but the estimate is more similar, around .65, where the random effect is specified as  -->
<!--  `(portuguese + 1|class_number)` or `(portuguese + 0|class_number)`. -->
<!-- > The residual variance term is different between the models. -->
<!-- > Which random effects variances are shown is also different. -->
<!-- > There is a convergence warning for: -->

<!-- `english ~ portuguese + (portuguese + 0 | class_number)` -->

##### Practical Task 15 - Exercise mixed-effects model coding

Change the outcome (from english) and the predictor (from portuguese) -- this is about changing the fixed effect part of the model.

- Note that you will need to change the random effect part as well.

:::{.callout-tip collapse="true"}
## Code
```{r}
porto.lmer1 <- lmer(physics ~ math +
                      (math + 1|class_number),
                    data = brazil)
summary(porto.lmer1)
```
:::

>**Pract.Q.10.** What elements of the model summary stand out for you? It will help to see what you should notice if you compare the math-physics model with the first english-portuguese model.

<!-- > Pract.A.10. You may notice that: -->

<!-- - The summary comes with a fit is singular? warning. -->
<!-- - The variance terms for intercept or the math effect by class number and the residual are very very small: much smaller than for the english-portuguese model. -->

#### Practical Part 8: Extension

##### Practical Task Optional

In the lecture materials, I display a plot showing the estimated intercept and coefficient for  each class, estimated using separate models for different classes.

- Some of you may be interested in how I did that, you can run the following code to see.

1. Use the `{dplyr}` `%>%` syntax to run a model for each class separately, collect together the results into a dataframe.

:::{.callout-tip collapse="true"}
## Code
```{r}
brazlm <- brazil %>% group_by(class_number) %>% do(tidy(lm(english ~ portuguese, data=.)))
brazlm$term <- as.factor(brazlm$term)
```
:::

2. Extract the per-class estimates of the intercepts and the 'portuguese' effect coefficient estimates.

:::{.callout-tip collapse="true"}
## Code
```{r}
brazlmint <- filter(brazlm, term == '(Intercept)')
brazlmport <- filter(brazlm, term == 'portuguese')
```
:::

3. Plot the estimates.

:::{.callout-tip collapse="true"}
## Code
```{r}
pbrazlmint <- ggplot(brazlmint, aes(x = class_number, y = estimate, ymin = estimate - std.error, ymax = estimate + std.error))
pbrazlmint <- pbrazlmint + geom_point(size = 2) + geom_linerange() + theme_bw() 
pbrazlmint <- pbrazlmint + ggtitle("Intercept") + ylab("Estimated coefficient +/- SE") + xlab("Class")
pbrazlmint <- pbrazlmint + theme(axis.title.y = element_text(size = 10), axis.text.x = element_blank(), panel.grid = element_blank())
# pbrazlmint

pbrazlmport <- ggplot(brazlmport, aes(x = class_number, y = estimate, ymin = estimate - std.error, ymax = estimate + std.error))
pbrazlmport <- pbrazlmport + geom_point(size = 2) + geom_linerange() + theme_bw() 
pbrazlmport <- pbrazlmport + ggtitle("Portuguese effect") + ylab("Estimated coefficient +/- SE") + xlab("Class")
pbrazlmport <- pbrazlmport + theme(axis.title.y = element_text(size = 10), axis.text.x = element_blank(), panel.grid = element_blank())
# pbrazlmport

# -- ask R to make a grid:

grid.arrange(pbrazlmint, pbrazlmport,
             ncol = 2)
```
:::

Challenge: Can you change the code to show the estimates for the relationship between physics and math grades?

### The answers

After the practical class, we will reveal the answers that are currently hidden.

The answers version of the webpage will present my answers for questions, and some extra information where that is helpful.

